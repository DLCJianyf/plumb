/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _Plumb = __webpack_require__(/*! ./src/Plumb */ \"./src/Plumb.js\");\n\nvar _Plumb2 = _interopRequireDefault(_Plumb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sources = document.getElementsByClassName(\"jtk-demo-canvas-window\");\n\nwindow.plumb = new _Plumb2.default(sources, {\n    marker: \"ARROW\",\n    lineDashType: \"SOLID\",\n    lineType: \"FLOW\",\n    strokeWidth: 2,\n    padding: 20,\n    useGuideLine: true,\n    useGrid: true\n});\n\nplumb.getSources().forEach(function (source) {\n    plumb.addEndPoint(source, {\n        uuid: source.getElement().id + \"-left\",\n        anchor: \"left\",\n        size: 18\n    });\n\n    plumb.addEndPoint(source, {\n        uuid: source.getElement().id + \"-right\",\n        anchor: \"right\",\n        size: 18\n    });\n}, undefined);\n\nplumb.on(\"connected\", function (evt) {\n    console.log(evt);\n});\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./src/Anchor.js":
/*!***********************!*\
  !*** ./src/Anchor.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Util = __webpack_require__(/*! ./Util */ \"./src/Util.js\");\n\nvar _Util2 = _interopRequireDefault(_Util);\n\nvar _Render = __webpack_require__(/*! ./Render */ \"./src/Render.js\");\n\nvar _Render2 = _interopRequireDefault(_Render);\n\nvar _Observable2 = __webpack_require__(/*! ./Observable */ \"./src/Observable.js\");\n\nvar _Observable3 = _interopRequireDefault(_Observable2);\n\nvar _Connector = __webpack_require__(/*! ./Connector */ \"./src/Connector.js\");\n\nvar _Connector2 = _interopRequireDefault(_Connector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Anchor = function (_Observable) {\n    _inherits(Anchor, _Observable);\n\n    function Anchor(rect, uuid, originX, originY, anchorType) {\n        _classCallCheck(this, Anchor);\n\n        var _this = _possibleConstructorReturn(this, (Anchor.__proto__ || Object.getPrototypeOf(Anchor)).call(this));\n\n        _this.type = \"ANCHOR\";\n        _this.rect = rect;\n        _this.uuid = uuid;\n        _this.originX = originX;\n        _this.originY = originY;\n\n        _this.on(\"moved\", _this.moved, _this);\n        _this.on(\"moveend\", _this.moveend, _this);\n        return _this;\n    }\n\n    _createClass(Anchor, [{\n        key: \"getRect\",\n        value: function getRect() {\n            return this.rect;\n        }\n\n        /**\r\n         * 移动\r\n         *\r\n         * @param {Object} args\r\n         */\n\n    }, {\n        key: \"moved\",\n        value: function moved(args) {\n            var connector = plumb.addConnector(this);\n            if (connector.uuid && plumb.config.marker) {\n                plumb.addMarker(connector.uuid, Object.assign({}, this.rect), plumb.config.marker, connector.markerId);\n            }\n            plumb.updateConnector(this.uuid);\n        }\n\n        /**\r\n         * 移动结束\r\n         */\n\n    }, {\n        key: \"moveend\",\n        value: function moveend() {\n            if (!plumb.floatingEndPoint) return;\n\n            //移除拖拽功能\n            plumb.unDraggable(plumb.floatingEndPoint, \"ENDPOINT\");\n            //删除锚点\n            _Render2.default.deleteAnchor(plumb.floatingEndPoint);\n            //删除连接线\n            plumb.deleteConnector(plumb.floatingEndPoint, null);\n\n            var rect1 = plumb.floatingEndPoint.getRect();\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = plumb.sources[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var source = _step.value;\n                    var _iteratorNormalCompletion2 = true;\n                    var _didIteratorError2 = false;\n                    var _iteratorError2 = undefined;\n\n                    try {\n                        for (var _iterator2 = source.endPoints[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                            var endPoint = _step2.value;\n\n                            var rect = endPoint.getRect();\n                            var isTwoPointIntersect = _Util2.default.isCircleIntersect({\n                                x: rect.x,\n                                y: rect.y,\n                                r: rect.w / 2\n                            }, {\n                                x: rect1.x,\n                                y: rect1.y,\n                                r: rect1.w / 2\n                            });\n                            if (isTwoPointIntersect) {\n                                plumb.deleteConnector(endPoint, plumb.floatingEndPoint);\n                                var connector = plumb.addConnector(endPoint, plumb.floatingEndPoint.uuid);\n                                if (connector.uuid && plumb.config.marker) {\n                                    plumb.addMarker(connector.uuid, Object.assign({}, this.rect), plumb.config.marker, connector.markerId);\n                                }\n                                plumb.trigger(\"connected\", {\n                                    sourceID: plumb.floatingEndPoint.uuid,\n                                    targetID: endPoint.uuid\n                                });\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError2 = true;\n                        _iteratorError2 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                                _iterator2.return();\n                            }\n                        } finally {\n                            if (_didIteratorError2) {\n                                throw _iteratorError2;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            delete plumb.floatingEndPoint;\n        }\n    }]);\n\n    return Anchor;\n}(_Observable3.default);\n\nexports.default = Anchor;\n\n//# sourceURL=webpack:///./src/Anchor.js?");

/***/ }),

/***/ "./src/Connector.js":
/*!**************************!*\
  !*** ./src/Connector.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Textarea = __webpack_require__(/*! ./Textarea */ \"./src/Textarea.js\");\n\nvar _Textarea2 = _interopRequireDefault(_Textarea);\n\nvar _Util = __webpack_require__(/*! ./Util */ \"./src/Util.js\");\n\nvar _Util2 = _interopRequireDefault(_Util);\n\nvar _DOMUtil = __webpack_require__(/*! ./DOMUtil */ \"./src/DOMUtil.js\");\n\nvar _DOMUtil2 = _interopRequireDefault(_DOMUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 连接线，SVG\r\n */\nvar Connector = function () {\n    function Connector(sourceEndPoint, targetEndPoint) {\n        _classCallCheck(this, Connector);\n\n        this.sourceEndPoint = sourceEndPoint;\n        this.targetEndPoint = targetEndPoint;\n        this.uuid = sourceEndPoint.uuid + \"^-^\" + targetEndPoint.uuid;\n        this.markerId = \"marker-achor-\" + plumb.flag++;\n    }\n\n    /**\r\n     * 获取起始点\r\n     */\n\n\n    _createClass(Connector, [{\n        key: \"getSource\",\n        value: function getSource() {\n            return this.sourceEndPoint;\n        }\n\n        /**\r\n         * 获取终止点\r\n         */\n\n    }, {\n        key: \"getTarget\",\n        value: function getTarget() {\n            return this.targetEndPoint;\n        }\n\n        /**\r\n         * 获取外接矩形\r\n         */\n\n    }, {\n        key: \"getBound\",\n        value: function getBound() {\n            var rect1 = this.getSource().getRect();\n            var rect2 = this.getTarget().getRect();\n\n            return _Util2.default.getBoundByRect(rect1, rect2);\n        }\n\n        /**\r\n         * 获取锚点大小\r\n         */\n\n    }, {\n        key: \"getPointSize\",\n        value: function getPointSize() {\n            return this.getSource().getRect().w || 0;\n        }\n\n        /**\r\n         * 获取连接线大小及外界矩形\r\n         */\n\n    }, {\n        key: \"getSizeAndBound\",\n        value: function getSizeAndBound() {\n            var bound = this.getBound();\n            var size = this.getPointSize();\n            var width = _Util2.default.distance(bound.minX, bound.maxX);\n            var height = _Util2.default.distance(bound.minY, bound.maxY);\n\n            return {\n                size: size,\n                width: width,\n                height: height,\n                bound: bound\n            };\n        }\n\n        /**\r\n         * 点击\r\n         *\r\n         * @param {Object} evt\r\n         */\n\n    }, {\n        key: \"onclick\",\n        value: function onclick(evt) {\n            var me = this;\n            var locked = false;\n            var firstTab = false;\n            var exeDbTap = false;\n\n            return function () {\n                //之前的是双击\n                if (exeDbTap) {\n                    locked = false;\n                    firstTab = false;\n                    exeDbTap = false;\n                }\n\n                if (!firstTab) {\n                    firstTab = true;\n                    setTimeout(function () {\n                        if (!locked) {\n                            me.onSingleClick();\n                            firstTab = false;\n                        }\n                    }, 300);\n                } else {\n                    locked = true;\n                    me.onDoubleClick();\n                    exeDbTap = true;\n                }\n            };\n        }\n\n        /**\r\n         * 单击\r\n         */\n\n    }, {\n        key: \"onSingleClick\",\n        value: function onSingleClick() {\n            if (window.confirm(\"是否删除连接线?\")) {\n                var uuid = this.uuid;\n                delete plumb.connectors[uuid];\n                _DOMUtil2.default.delete(this.element);\n\n                this.uuid.split(\"^-^\").forEach(function (id) {\n                    var p = _Util2.default.findItemByUUID(plumb.endPoints, id);\n                    var circle = _DOMUtil2.default.find(\"tag\", \"circle\", p.element);\n                    _DOMUtil2.default.setAttributes(circle, { fill: \"gray\" });\n                });\n            }\n        }\n\n        /**\r\n         * 双击\r\n         */\n\n    }, {\n        key: \"onDoubleClick\",\n        value: function onDoubleClick() {\n            var me = this;\n            if (!me.textarea) {\n                me.textarea = new _Textarea2.default();\n                me.textarea.onblur = function () {\n                    var textLinker = _DOMUtil2.default.find(\"class\", \"text-linker\", me.element);\n                    textLinker.innerHTML = me.textarea.element.innerHTML;\n                    _DOMUtil2.default.delete(me.textarea, me.element);\n                    delete me.textarea;\n                };\n                _DOMUtil2.default.appendToNode(me.textarea.element, me.element);\n            }\n        }\n\n        /**\r\n         * 鼠标hover时间\r\n         *\r\n         * @param {Object} evt\r\n         */\n\n    }, {\n        key: \"onmouseover\",\n        value: function onmouseover(evt) {\n            var paths = _DOMUtil2.default.find(\"tag\", \"path\", this.element, true);\n            _DOMUtil2.default.setAttributes(paths[0], {\n                stroke: \"orange\",\n                \"stroke-width\": plumb.config.strokeWidth + 2\n            });\n            _DOMUtil2.default.setAttributes(paths[1], { fill: \"orange\" });\n\n            this.uuid.split(\"^-^\").forEach(function (id) {\n                var p = _Util2.default.findItemByUUID(plumb.endPoints, id);\n                var circle = _DOMUtil2.default.find(\"tag\", \"circle\", p.element);\n                _DOMUtil2.default.setAttributes(circle, { fill: \"orange\" });\n            });\n        }\n\n        /**\r\n         * 鼠标移出\r\n         *\r\n         * @param {Object} evt\r\n         */\n\n    }, {\n        key: \"onmouseout\",\n        value: function onmouseout(evt) {\n            var paths = _DOMUtil2.default.find(\"tag\", \"path\", this.element, true);\n            _DOMUtil2.default.setAttributes(paths[0], {\n                stroke: \"gray\",\n                \"stroke-width\": plumb.config.strokeWidth\n            });\n            _DOMUtil2.default.setAttributes(paths[1], { fill: \"gray\" });\n\n            this.uuid.split(\"^-^\").forEach(function (id) {\n                var p = _Util2.default.findItemByUUID(plumb.endPoints, id);\n                var circle = _DOMUtil2.default.find(\"tag\", \"circle\", p.element);\n                _DOMUtil2.default.setAttributes(circle, { fill: \"gray\" });\n            });\n        }\n    }]);\n\n    return Connector;\n}();\n\nexports.default = Connector;\n\n//# sourceURL=webpack:///./src/Connector.js?");

/***/ }),

/***/ "./src/DOMUtil.js":
/*!************************!*\
  !*** ./src/DOMUtil.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * DOM相关操作\r\n */\nvar DOMUtil = {\n    ns: \"http://www.w3.org/2000/svg\",\n\n    version: \"1.1\",\n\n    /**\r\n     * 创建element\r\n     *\r\n     * @param {String} tag\r\n     * @param {Object} style\r\n     * @param {String} clazz\r\n     * @param {Object} atts\r\n     */\n    createElement: function createElement(tag, style, clazz, atts) {\n        return this.createElementNS(null, tag, style, clazz, atts);\n    },\n\n    /**\r\n     * 创建带命名空间的element\r\n     *\r\n     * @param {String} ns\r\n     * @param {String} tag\r\n     * @param {Object} style\r\n     * @param {String} clazz\r\n     * @param {Object} atts\r\n     */\n    createElementNS: function createElementNS(ns, tag, style, clazz, atts) {\n        var el = ns === null ? document.createElement(tag) : document.createElementNS(ns, tag);\n\n        var i = void 0;\n        style = style || {};\n        for (i in style) {\n            el.style[i] = style[i];\n        }\n\n        if (clazz) el.className = clazz;\n\n        atts = atts || {};\n        for (i in atts) {\n            el.setAttribute(i, \"\" + atts[i]);\n        }\n\n        return el;\n    },\n\n    /**\r\n     * 获取属性\r\n     *\r\n     * @param {HTMLElement} el\r\n     * @param {String}      attName\r\n     */\n    getAttribute: function getAttribute(el, attName) {\n        return el.getAttribute != null ? el.getAttribute(attName) : null;\n    },\n\n    /**\r\n     * 设置属性\r\n     *\r\n     * @param {HTMLElement} el\r\n     * @param {String}      a\r\n     * @param {String}      v\r\n     */\n    setAttribute: function setAttribute(el, a, v) {\n        if (el.setAttribute != null) {\n            el.setAttribute(a, v);\n        }\n    },\n\n    /**\r\n     * 设置属性\r\n     *\r\n     * @param {HTMLElement} el\r\n     * @param {Object}      atts\r\n     */\n    setAttributes: function setAttributes(el, atts) {\n        for (var i in atts) {\n            if (atts.hasOwnProperty(i)) {\n                el.setAttribute(i, atts[i]);\n            }\n        }\n    },\n\n    /**\r\n     * 获取样式信息\r\n     *\r\n     * @param {HTMLElement} el\r\n     * @param {String}      prop\r\n     */\n    getStyle: function getStyle(el, prop) {\n        if (typeof window.getComputedStyle !== \"undefined\") {\n            return getComputedStyle(el, null).getPropertyValue(prop);\n        } else {\n            return el.currentStyle[prop];\n        }\n    },\n\n    /**\r\n     * 设置样式\r\n     *\r\n     * @param {HTMLElement} el\r\n     * @param {Object}      style\r\n     */\n    setStyle: function setStyle(el, style) {\n        style = style || {};\n        for (var i in style) {\n            el.style[i] = style[i];\n        }\n    },\n\n\n    /**\r\n     * 设置元素位置信息\r\n     *\r\n     * @param {HTMLElement} el\r\n     * @param {Object}      p\r\n     */\n    setPosition: function setPosition(el, p) {\n        el.style.left = p.left + \"px\";\n        el.style.top = p.top + \"px\";\n    },\n\n    /**\r\n     * 添加到根节点\r\n     *\r\n     * @param {HTMLElement} node\r\n     */\n    appendToRoot: function appendToRoot(node) {\n        DOMUtil.appendToNode(node, null);\n    },\n\n    /**\r\n     * 添加到指定父节点\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @param {HTMLElement} parentNode\r\n     */\n    appendToNode: function appendToNode(node, parentNode) {\n        !parentNode ? document.body.appendChild(node) : parentNode.appendChild(node);\n    },\n\n    /**\r\n     * 插入之前\r\n     *\r\n     * @param {Object} newelement\r\n     * @param {Object} targetelement\r\n     */\n    insertBefore: function insertBefore(newelement, targetelement) {\n        var parentelement = targetelement.parentNode;\n        parentelement.insertBefore(newelement, targetelement);\n    },\n\n\n    /**\r\n     * 插入之后\r\n     *\r\n     * @param {Object} newelement\r\n     * @param {Object} targetelement\r\n     */\n    insertAfter: function insertAfter(newelement, targetelement) {\n        var parentelement = targetelement.parentNode;\n        if (parentelement.lastChild == targetelement) {\n            parentelement.appendChild(newelement);\n        } else {\n            parentelement.insertBefore(newelement, targetelement.nextSilbing);\n        }\n    },\n\n\n    /**\r\n     * 删除\r\n     *\r\n     * @param {HTMLElement} elem\r\n     * @param {HTMLElement} parent\r\n     */\n    delete: function _delete(elem, parent) {\n        parent = parent || elem.parentNode;\n        parent.removeChild(elem);\n    },\n\n\n    /**\r\n     * 获取dom节点\r\n     *\r\n     * @param {String}  tag\r\n     * @param {String}  name\r\n     * @param {Object}  parent\r\n     * @param {Boolean} all\r\n     */\n    find: function find(tag, name, parent, all) {\n        parent = parent || document;\n\n        if (tag === \"tag\") {\n            return all ? parent.getElementsByTagName(name) : parent.getElementsByTagName(name)[0];\n        } else if (tag === \"class\") {\n            return parent.getElementsByClassName(name)[0];\n        } else {\n            return parent.getElementById(name);\n        }\n    },\n\n\n    /**\r\n     * 鼠标手势\r\n     *\r\n     * @param {Boolean} isShow\r\n     */\n    cursor: function cursor(isShow) {\n        document.body.style.cursor = isShow ? \"pointer\" : \"default\";\n    },\n\n\n    /**\r\n     * 获取element大小\r\n     *\r\n     * @param {HTMLElement} el\r\n     */\n    getSize: function getSize(el) {\n        return [el.offsetWidth, el.offsetHeight];\n    },\n\n    /**\r\n     * 获取element宽度\r\n     *\r\n     * @param {HTMLElement} el\r\n     */\n    getWidth: function getWidth(el) {\n        return el.offsetWidth;\n    },\n\n    /**\r\n     * 获取element高度\r\n     *\r\n     * @param {HTMLElement} el\r\n     */\n    getHeight: function getHeight(el) {\n        return el.offsetHeight;\n    },\n\n    /**\r\n     * 设置元素大小和位置\r\n     *\r\n     * @param {HTMLElement} el\r\n     * @param {Number}      x\r\n     * @param {Number}      y\r\n     * @param {Number}      w\r\n     * @param {Number}      h\r\n     */\n    sizeElement: function sizeElement(el, x, y, w, h) {\n        if (el) {\n            el.style.height = h + \"px\";\n            //el.height = h;\n            el.style.width = w + \"px\";\n            //el.width = w;\n            el.style.left = x + \"px\";\n            el.style.top = y + \"px\";\n        }\n    },\n\n    /**\r\n     * 阻止事件\r\n     *\r\n     * @param {Event}   e\r\n     * @param {Boolean} doNotPreventDefault\r\n     */\n    stopEvent: function stopEvent(e, doNotPreventDefault) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n        } else {\n            e.returnValue = false;\n        }\n\n        if (!doNotPreventDefault && e.preventDefault) {\n            e.preventDefault();\n        }\n    }\n};\n\nexports.default = DOMUtil;\n\n//# sourceURL=webpack:///./src/DOMUtil.js?");

/***/ }),

/***/ "./src/Drag.js":
/*!*********************!*\
  !*** ./src/Drag.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Render = __webpack_require__(/*! ./Render */ \"./src/Render.js\");\n\nvar _Render2 = _interopRequireDefault(_Render);\n\nvar _Util = __webpack_require__(/*! ./Util */ \"./src/Util.js\");\n\nvar _Util2 = _interopRequireDefault(_Util);\n\nvar _DOMUtil = __webpack_require__(/*! ./DOMUtil */ \"./src/DOMUtil.js\");\n\nvar _DOMUtil2 = _interopRequireDefault(_DOMUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Drag = {\n    //鼠标是否按下\n    isDown: false,\n    //当前拖拽目标\n    dragEl: null,\n\n    /**\r\n     * 设置拖拽元素\r\n     * @param {Object} el\r\n     */\n    setDragEl: function setDragEl(el) {\n        this.dragEl = el;\n    },\n\n\n    /**\r\n     * 鼠标按下\r\n     *\r\n     * @param {Event} evt\r\n     */\n    dragStart: function dragStart(evt, target) {\n        Drag.isDown = true;\n        if (Drag.dragEl) {\n            Drag.dragEl.originX = evt.clientX;\n            Drag.dragEl.originY = evt.clientY;\n        }\n    },\n\n\n    /**\r\n     * 鼠标移动\r\n     *\r\n     * @param {Event} evt\r\n     */\n    dragging: function dragging(evt) {\n        if (Drag.isDown) {\n            if (Drag.dragEl) {\n                var target = Drag.dragEl;\n                var $X = evt.clientX - target.originX;\n                var $Y = evt.clientY - target.originY;\n\n                if (target.type !== \"END_POINT\") {\n                    target.rect.x += $X;\n                    target.rect.y += $Y;\n\n                    target.originX = evt.clientX;\n                    target.originY = evt.clientY;\n\n                    _Render2.default.updatePosition(target.element, target.rect.x, target.rect.y);\n                }\n\n                target.trigger(\"moved\", { $X: $X, $Y: $Y });\n            }\n        } else {\n            var isFind = false;\n            //优先从节点中找\n            plumb.draggableEls.SOURCE.forEach(function (el) {\n                if (!isFind) {\n                    isFind = _Util2.default.isInRect({ x: evt.clientX, y: evt.clientY }, el.getRect());\n                    isFind && Drag.setDragEl(el);\n                }\n            });\n\n            if (!isFind) {\n                plumb.draggableEls.ENDPOINT.forEach(function (el) {\n                    if (!isFind) {\n                        isFind = _Util2.default.isInCircle({ x: evt.clientX, y: evt.clientY }, el.getRect());\n                        isFind && Drag.setDragEl(el);\n                    }\n                });\n            }\n\n            !isFind && Drag.setDragEl(null);\n\n            //手势\n            // DOMUtil.cursor(isFind);\n        }\n    },\n\n\n    /**\r\n     * 鼠标升起\r\n     *\r\n     * @param {Event} evt\r\n     */\n    dragEnd: function dragEnd(evt) {\n        Drag.isDown = false;\n        Drag.dragEl && Drag.dragEl.trigger(\"moveend\", Drag.dragEl.type);\n    }\n};\n\nexports.default = Drag;\n\n//# sourceURL=webpack:///./src/Drag.js?");

/***/ }),

/***/ "./src/EleResize.js":
/*!**************************!*\
  !*** ./src/EleResize.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * dom元素resize事件监听\r\n */\nvar EleResize = {\n    _handleResize: function _handleResize(e) {\n        var ele = e.target || e.srcElement;\n        var trigger = ele.__resizeTrigger__;\n        if (trigger) {\n            var handlers = trigger.__z_resizeListeners;\n            if (handlers) {\n                var size = handlers.length;\n                for (var i = 0; i < size; i++) {\n                    var h = handlers[i];\n                    var handler = h.handler;\n                    var context = h.context;\n                    handler.apply(context, [e]);\n                }\n            }\n        }\n    },\n    _removeHandler: function _removeHandler(ele, handler, context) {\n        var handlers = ele.__z_resizeListeners;\n        if (handlers) {\n            var size = handlers.length;\n            for (var i = 0; i < size; i++) {\n                var h = handlers[i];\n                if (h.handler === handler && h.context === context) {\n                    handlers.splice(i, 1);\n                    return;\n                }\n            }\n        }\n    },\n    _createResizeTrigger: function _createResizeTrigger(ele) {\n        var obj = document.createElement(\"object\");\n        obj.setAttribute(\"style\", \"display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden;opacity: 0; pointer-events: none; z-index: -1;\");\n        obj.onload = EleResize._handleObjectLoad;\n        obj.type = \"text/html\";\n        ele.appendChild(obj);\n        obj.data = \"about:blank\";\n        return obj;\n    },\n    _handleObjectLoad: function _handleObjectLoad(evt) {\n        this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__;\n        this.contentDocument.defaultView.addEventListener(\"resize\", EleResize._handleResize);\n    }\n};\nif (document.attachEvent) {\n    //ie9-10\n    EleResize.on = function (ele, handler, context) {\n        var handlers = ele.__z_resizeListeners;\n        if (!handlers) {\n            handlers = [];\n            ele.__z_resizeListeners = handlers;\n            ele.__resizeTrigger__ = ele;\n            ele.attachEvent(\"onresize\", EleResize._handleResize);\n        }\n        handlers.push({\n            handler: handler,\n            context: context\n        });\n    };\n    EleResize.off = function (ele, handler, context) {\n        var handlers = ele.__z_resizeListeners;\n        if (handlers) {\n            EleResize._removeHandler(ele, handler, context);\n            if (handlers.length === 0) {\n                ele.detachEvent(\"onresize\", EleResize._handleResize);\n                delete ele.__z_resizeListeners;\n            }\n        }\n    };\n} else {\n    EleResize.on = function (ele, handler, context) {\n        var handlers = ele.__z_resizeListeners;\n        if (!handlers) {\n            handlers = [];\n            ele.__z_resizeListeners = handlers;\n\n            if (getComputedStyle(ele, null).position === \"static\") {\n                ele.style.position = \"relative\";\n            }\n            var obj = EleResize._createResizeTrigger(ele);\n            ele.__resizeTrigger__ = obj;\n            obj.__resizeElement__ = ele;\n        }\n        handlers.push({\n            handler: handler,\n            context: context\n        });\n    };\n    EleResize.off = function (ele, handler, context) {\n        var handlers = ele.__z_resizeListeners;\n        if (handlers) {\n            EleResize._removeHandler(ele, handler, context);\n            if (handlers.length === 0) {\n                var trigger = ele.__resizeTrigger__;\n                if (trigger) {\n                    trigger.contentDocument.defaultView.removeEventListener(\"resize\", EleResize._handleResize);\n                    ele.removeChild(trigger);\n                    delete ele.__resizeTrigger__;\n                }\n                delete ele.__z_resizeListeners;\n            }\n        }\n    };\n}\n\nexports.default = EleResize;\n\n//# sourceURL=webpack:///./src/EleResize.js?");

/***/ }),

/***/ "./src/EndPoint.js":
/*!*************************!*\
  !*** ./src/EndPoint.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Util = __webpack_require__(/*! ./Util */ \"./src/Util.js\");\n\nvar _Util2 = _interopRequireDefault(_Util);\n\nvar _Drag = __webpack_require__(/*! ./Drag */ \"./src/Drag.js\");\n\nvar _Drag2 = _interopRequireDefault(_Drag);\n\nvar _Render = __webpack_require__(/*! ./Render */ \"./src/Render.js\");\n\nvar _Render2 = _interopRequireDefault(_Render);\n\nvar _DOMUtil = __webpack_require__(/*! ./DOMUtil */ \"./src/DOMUtil.js\");\n\nvar _DOMUtil2 = _interopRequireDefault(_DOMUtil);\n\nvar _Observable2 = __webpack_require__(/*! ./Observable */ \"./src/Observable.js\");\n\nvar _Observable3 = _interopRequireDefault(_Observable2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * 锚点\r\n */\nvar EndPoint = function (_Observable) {\n    _inherits(EndPoint, _Observable);\n\n    function EndPoint(opt, x, y) {\n        _classCallCheck(this, EndPoint);\n\n        var _this = _possibleConstructorReturn(this, (EndPoint.__proto__ || Object.getPrototypeOf(EndPoint)).call(this));\n\n        _this.type = \"END_POINT\";\n\n        _this.uuid = opt.uuid;\n        _this.anchor = opt.anchor;\n        _this.originX = _this.originY = 0;\n        _this.rect = { x: x, y: y, w: opt.size, h: opt.size };\n        //this.rect = [x, y, opt.size, opt.size];\n        _this.isMouseDown = false;\n\n        _this.on(\"moved\", _this.moved, _this);\n        return _this;\n    }\n\n    /**\r\n     * 获取位置，大小信息\r\n     */\n\n\n    _createClass(EndPoint, [{\n        key: \"getRect\",\n        value: function getRect() {\n            return this.rect;\n        }\n\n        /**\r\n         * 更新位置信息\r\n         *\r\n         * @param {Number} $X\r\n         * @param {Number} $Y\r\n         */\n\n    }, {\n        key: \"updatePosition\",\n        value: function updatePosition($X, $Y) {\n            this.rect.x += $X;\n            this.rect.y += $Y;\n\n            plumb.updateConnector(this.uuid);\n        }\n\n        /**\r\n         * 自身移动\r\n         *\r\n         * @param {Object} args\r\n         */\n\n    }, {\n        key: \"moved\",\n        value: function moved(args) {\n            if (!plumb.floatingEndPoint) {\n                plumb.floatingEndPoint = plumb.createFloatingEndPoint(Object.assign({}, this.rect), this.uuid, this.originX, this.originY);\n                plumb.floatingEndPoint.element = _Render2.default.assembleAnchor(plumb.floatingEndPoint);\n                _DOMUtil2.default.appendToNode(plumb.floatingEndPoint.element, document.querySelector(\".jtk-demo-canvas\"));\n                plumb.draggable(plumb.floatingEndPoint, \"ENDPOINT\");\n\n                //更改拖拽目标\n                _Drag2.default.setDragEl(plumb.floatingEndPoint);\n            }\n        }\n\n        /**\r\n         * 鼠标hover时间\r\n         *\r\n         * @param {Object} evt\r\n         */\n\n    }, {\n        key: \"onmouseover\",\n        value: function onmouseover(evt) {\n            var path = _DOMUtil2.default.find(\"tag\", \"circle\", this.element);\n            _DOMUtil2.default.setAttributes(path, { fill: \"orange\" });\n        }\n\n        /**\r\n         * 鼠标移出\r\n         *\r\n         * @param {Object} evt\r\n         */\n\n    }, {\n        key: \"onmouseout\",\n        value: function onmouseout(evt) {\n            var path = _DOMUtil2.default.find(\"tag\", \"circle\", this.element);\n            _DOMUtil2.default.setAttributes(path, { fill: \"gray\" });\n        }\n    }]);\n\n    return EndPoint;\n}(_Observable3.default);\n\nexports.default = EndPoint;\n\n//# sourceURL=webpack:///./src/EndPoint.js?");

/***/ }),

/***/ "./src/Grid.js":
/*!*********************!*\
  !*** ./src/Grid.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Observable2 = __webpack_require__(/*! ./Observable */ \"./src/Observable.js\");\n\nvar _Observable3 = _interopRequireDefault(_Observable2);\n\nvar _Util = __webpack_require__(/*! ./Util */ \"./src/Util.js\");\n\nvar _Util2 = _interopRequireDefault(_Util);\n\nvar _DOMUtil = __webpack_require__(/*! ./DOMUtil */ \"./src/DOMUtil.js\");\n\nvar _DOMUtil2 = _interopRequireDefault(_DOMUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * 背景网格\r\n */\nvar Grid = function (_Observable) {\n    _inherits(Grid, _Observable);\n\n    function Grid(padding) {\n        _classCallCheck(this, Grid);\n\n        var _this = _possibleConstructorReturn(this, (Grid.__proto__ || Object.getPrototypeOf(Grid)).call(this));\n\n        _this.id = \"design_grid\";\n        _this.gridSize = 15;\n        _this.padding = padding;\n        _this.element = _this.create();\n\n        _this.on(\"resize\", _this.resize.bind(_this));\n        return _this;\n    }\n\n    /**\r\n     * 元素创建\r\n     */\n\n\n    _createClass(Grid, [{\n        key: \"create\",\n        value: function create() {\n            var canvas = _DOMUtil2.default.createElement(\"canvas\", { position: \"absolute\", left: \"0\", top: \"0\" }, \"\", {\n                id: this.id\n            });\n            this.paint(canvas, this.padding, this.gridSize);\n            return canvas;\n        }\n\n        /**\r\n         * 绘制网格\r\n         *\r\n         * @param {HTMLElement} canvas\r\n         * @param {Number}      padding\r\n         * @param {Number}      gridSize\r\n         */\n\n    }, {\n        key: \"paint\",\n        value: function paint(canvas, padding, gridSize) {\n            var wrapper = _DOMUtil2.default.find(\"class\", \"jtk-demo-main\");\n            var rect = _Util2.default.getElementRectInfo(wrapper);\n            var innerRect = {\n                x: padding,\n                y: padding,\n                w: rect.w - 2 * padding,\n                h: rect.h - 2 * padding\n            };\n\n            canvas.width = rect.w;\n            canvas.height = rect.h;\n            var ctx = canvas.getContext(\"2d\");\n            ctx.clearRect(0, 0, rect.w, rect.h);\n            ctx.fillStyle = \"rgb(255, 255, 255)\";\n            ctx.beginPath();\n            ctx.rect(innerRect.x, innerRect.y, innerRect.w, innerRect.h);\n            ctx.fill();\n\n            ctx.translate(padding, padding);\n            ctx.lineWidth = 1;\n            ctx.save();\n\n            var x = 0.5;\n            var gap = 0;\n            while (x <= innerRect.h) {\n                ctx.restore();\n                if (gap % 4 === 0) {\n                    ctx.strokeStyle = \"rgb(229, 229, 229)\";\n                } else {\n                    ctx.strokeStyle = \"rgb(242, 242, 242)\";\n                }\n                ctx.beginPath();\n                ctx.moveTo(0, x);\n                ctx.lineTo(innerRect.w, x);\n                x += gridSize;\n                gap++;\n                ctx.stroke();\n            }\n\n            x = 0.5;\n            gap = 0;\n            while (x <= innerRect.w) {\n                ctx.restore();\n                if (gap % 4 === 0) {\n                    ctx.strokeStyle = \"rgb(229, 229, 229)\";\n                } else {\n                    ctx.strokeStyle = \"rgb(242, 242, 242)\";\n                }\n                ctx.beginPath();\n                ctx.moveTo(x, 0);\n                ctx.lineTo(x, innerRect.h);\n                x += gridSize;\n                gap++;\n                ctx.stroke();\n            }\n        }\n\n        /**\r\n         * resize监听\r\n         */\n\n    }, {\n        key: \"resize\",\n        value: function resize() {\n            this.paint(this.element, this.padding, this.gridSize);\n        }\n    }]);\n\n    return Grid;\n}(_Observable3.default);\n\nexports.default = Grid;\n\n//# sourceURL=webpack:///./src/Grid.js?");

/***/ }),

/***/ "./src/GuideLine.js":
/*!**************************!*\
  !*** ./src/GuideLine.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _DOMUtil = __webpack_require__(/*! ./DOMUtil */ \"./src/DOMUtil.js\");\n\nvar _DOMUtil2 = _interopRequireDefault(_DOMUtil);\n\nvar _Observable2 = __webpack_require__(/*! ./Observable */ \"./src/Observable.js\");\n\nvar _Observable3 = _interopRequireDefault(_Observable2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * 辅助线\r\n */\nvar GuideLine = function (_Observable) {\n    _inherits(GuideLine, _Observable);\n\n    function GuideLine(type) {\n        _classCallCheck(this, GuideLine);\n\n        var _this = _possibleConstructorReturn(this, (GuideLine.__proto__ || Object.getPrototypeOf(GuideLine)).call(this));\n\n        _this.type = type;\n\n        _this.rect = {\n            x: 0,\n            y: 0\n        };\n        _this.element = _this.create();\n        return _this;\n    }\n\n    _createClass(GuideLine, [{\n        key: \"create\",\n        value: function create() {\n            var style = {\n                position: \"absolute\",\n                left: \"0\",\n                top: \"0\",\n                width: \"100%\",\n                height: \"1px\",\n                margin: \"0\",\n                padding: \"0\",\n                background: \"rgb(110, 177, 234)\",\n                \"pointer-events\": \"none\",\n                zIndex: \"100\",\n                transform: \"translate(0, 0)\",\n                visibility: \"hidden\"\n            };\n\n            return _DOMUtil2.default.createElement(\"div\", Object.assign({}, style, this.type === \"horizontal\" ? { width: \"100%\", height: \"1px\" } : { width: \"1px\", height: \"100%\" }), \"guide-line-\" + this.type, { id: \"guide-line-\" + this.type });\n        }\n\n        /**\r\n         * 显示\r\n         *\r\n         * @param {String} x\r\n         * @param {String} y\r\n         */\n\n    }, {\n        key: \"show\",\n        value: function show(x, y) {\n            _DOMUtil2.default.setStyle(this.element, {\n                visibility: \"visible\",\n                transform: \"translate(\" + x + \", \" + y + \")\"\n            });\n        }\n\n        /**\r\n         * 隐藏\r\n         */\n\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            _DOMUtil2.default.setStyle(this.element, { visibility: \"hidden\", transform: \"translate(0, 0)\" });\n        }\n    }]);\n\n    return GuideLine;\n}(_Observable3.default);\n\nexports.default = GuideLine;\n\n//# sourceURL=webpack:///./src/GuideLine.js?");

/***/ }),

/***/ "./src/Link.js":
/*!*********************!*\
  !*** ./src/Link.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Util = __webpack_require__(/*! ./Util */ \"./src/Util.js\");\n\nvar _Util2 = _interopRequireDefault(_Util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * 连接线点数据计算，主要为流程线\r\n */\nvar Link = {\n    angle: {\n        left: 0,\n        top: 1.5707963267948966,\n        right: 3.141592653589793,\n        bottom: 4.71238898038469\n    },\n\n    /**\r\n     * 根据角度获取锚点方向\r\n     *\r\n     * @param {Number} angle 角度\r\n     */\n    getAngleDir: function getAngleDir(angle) {\n        var a = Math.PI;\n        if (angle >= a / 4 && angle < a / 4 * 3) {\n            return 1;\n        } else {\n            if (angle >= a / 4 * 3 && angle < a / 4 * 5) {\n                return 2;\n            } else {\n                if (angle >= a / 4 * 5 && angle < a / 4 * 7) {\n                    return 3;\n                } else {\n                    return 4;\n                }\n            }\n        }\n    },\n\n    /**\r\n     * 计算SVG Path属性点\r\n     *\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} bound\r\n     * @param {Number} size\r\n     */\n    calcPathPointArr: function calcPathPointArr(width, height, bound, size, source, target) {\n        switch (plumb.config.lineType) {\n            case \"BEZIER\":\n                return Link.calcBezier(width, height, bound, size, source, target);\n            case \"STRAIGHT\":\n                return Link.calcStraight(width, height, bound, size, source, target);\n            case \"FLOW\":\n                return Link.calcFlow(width, height, bound, size, source, target);\n            default:\n                return Link.calcBezier(width, height, bound, size, source, target);\n        }\n    },\n\n\n    /**\r\n     * 计算贝塞尔曲线参数\r\n     *\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} bound\r\n     * @param {Number} size\r\n     */\n    calcBezier: function calcBezier(width, height, bound, size, source, target) {\n        var p1 = [];\n        var p2 = [];\n        var p3 = [];\n        var p4 = [];\n\n        var maxX = bound.maxX - bound.minX;\n        var maxY = bound.maxY - bound.minY;\n        var minX = 0;\n        var minY = 0;\n\n        var thresoldX = 200;\n        var thresoldY = 0;\n        var sourceP = source;\n        var rect1 = sourceP.getRect();\n        var rect2 = target.getRect();\n\n        if (sourceP.anchor === \"right\" || sourceP.anchor === \"bottom\") {\n            if (rect1.x < rect2.x) {\n                p1.push(minX);\n                p2.push(minX + thresoldX);\n                p3.push(maxX - thresoldX);\n                p4.push(maxX);\n            } else {\n                p1.push(maxX);\n                p2.push(maxX + thresoldX);\n                p3.push(minX - thresoldX);\n                p4.push(minX);\n            }\n        } else {\n            if (rect1.x > rect2.x) {\n                p1.push(maxX);\n                p2.push(maxX - thresoldX);\n                p3.push(minX + thresoldX);\n                p4.push(minX);\n            } else {\n                p1.push(minX);\n                p2.push(minX - thresoldX);\n                p3.push(maxX + thresoldX);\n                p4.push(maxX);\n            }\n        }\n\n        if (rect1.y === bound.minY) {\n            p1.push(minY);\n            p2.push(minY + thresoldY);\n            p3.push(maxY - thresoldY);\n            p4.push(maxY);\n        } else {\n            p1.push(maxY);\n            p2.push(maxY - thresoldY);\n            p3.push(minY + thresoldY);\n            p4.push(minY);\n        }\n        //p3.push(maxY / 2);\n\n        return [p1, p2, p3, p4];\n    },\n\n\n    /**\r\n     * 计算直线参数\r\n     *\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} bound\r\n     * @param {Number} size\r\n     */\n    calcStraight: function calcStraight(width, height, bound, size, source, target) {\n        var p1 = [];\n        var p2 = [];\n\n        var maxX = bound.maxX - bound.minX;\n        var maxY = bound.maxY - bound.minY;\n        var minX = 0;\n        var minY = 0;\n\n        var rect = source.getRect();\n\n        if (rect.x === bound.minX) {\n            p1.push(minX);\n            p2.push(maxX);\n        } else {\n            p1.push(maxX);\n            p2.push(minX);\n        }\n\n        if (rect.y === bound.minY) {\n            p1.push(minY);\n            p2.push(maxY);\n        } else {\n            p1.push(maxY);\n            p2.push(minY);\n        }\n\n        return [p1, p2];\n    },\n\n\n    /**\r\n     * 计算流程线参数\r\n     *\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} bound\r\n     * @param {Number} size\r\n     */\n    calcFlow: function calcFlow(width, height, bound, size, source, target) {\n        var p1 = [];\n        var p2 = [];\n        var p3 = [];\n\n        var maxX = bound.maxX - bound.minX;\n        var maxY = bound.maxY - bound.minY;\n        var minX = 0;\n        var minY = 0;\n\n        var souE = source;\n        var tarE = target;\n        var rect1 = souE.getRect();\n        var rect2 = tarE.getRect();\n\n        if (rect1.x === bound.minX) {\n            p1.push(minX);\n            p2.push(minX);\n            p3.push(maxX);\n        } else {\n            p1.push(maxX);\n            p2.push(maxX);\n            p3.push(minX);\n        }\n\n        if (rect1.y === bound.minY) {\n            p1.push(minY);\n            p2.push(maxY);\n            p3.push(maxY);\n        } else {\n            p1.push(maxY);\n            p2.push(minY);\n            p3.push(minY);\n        }\n\n        var sou = _Util2.default.findSourceByAchor(plumb.sources, souE);\n        var tar = _Util2.default.findSourceByAchor(plumb.sources, tarE);\n        var r1 = sou.getRect();\n        var r2 = tar.getRect();\n\n        //参数转换以适配流程线的计算\n        var link = {\n            from: {\n                id: souE.type === \"ANCHOR\" ? null : souE.uuid,\n                x: p1[0],\n                y: p1[1],\n                w: r1.w,\n                h: r1.h,\n                type: souE.type,\n                anchor: souE.anchor\n            },\n\n            to: {\n                id: tarE.type === \"ANCHOR\" ? null : tarE.uuid,\n                x: p3[0],\n                y: p3[1],\n                w: r2.w,\n                h: r2.h,\n                type: tarE.type,\n                anchor: tarE.anchor\n            }\n        };\n\n        var linkerPoints = Link.getFlowPoints(link);\n        linkerPoints = linkerPoints.map(function (a) {\n            return [a.x, a.y];\n        });\n\n        var results = [p1];\n        results = results.concat(linkerPoints);\n        results.push(p3);\n        return results;\n    },\n\n\n    /**\r\n     * 获取连接线中间过渡点\r\n     *\r\n     * @param {Object} link 连接线对象\r\n     */\n    getFlowPoints: function getFlowPoints(link) {\n        var points = [];\n\n        var PI = Math.PI;\n        // var souE = link.getSource();\n        // var tarE = link.getTarget();\n        // var ser = souE.getRect();\n        // var ter = tarE.getRect();\n\n        // var sou = Util.findSourceByAchor(plumb.sources, souE);\n        // var tar = Util.findSourceByAchor(plumb.sources, tarE);\n\n        // var from = Object.assign({}, sou.getRect());\n        // var to = Object.assign({}, tar.getRect());\n        var from = link.from;\n        var to = link.to;\n\n        from.angle = from.type === \"ANCHOR\" ? Link.angle[\"bottom\"] : Link.angle[from.anchor];\n        to.angle = to.type === \"ANCHOR\" ? Link.angle[\"bottom\"] : Link.angle[to.anchor];\n        // from.id = souE.type === \"ANCHOR\" ? null : sou.uuid;\n        // to.id = tarE.type === \"ANCHOR\" ? null : tar.uuid;\n\n        var width = Math.abs(to.x - from.x);\n        var height = Math.abs(to.y - from.y);\n        var r = 50;\n        if (from.id != null && to.id != null) {\n            var fromDir = this.getAngleDir(from.angle);\n            var toDir = this.getAngleDir(to.angle);\n            var g, i, reverse;\n            if (fromDir == 1 && toDir == 1) {\n                if (from.y < to.y) {\n                    g = from;\n                    i = to;\n                    reverse = false;\n                } else {\n                    g = to;\n                    i = from;\n                    reverse = true;\n                }\n                // var h = Model.getShapeById(g.id).props;\n                // var v = Model.getShapeById(i.id).props;\n                var h = g;\n                var v = i;\n                if (i.x >= h.x - r && i.x <= h.x + h.from + r) {\n                    var o;\n                    if (i.x < h.x + h.from / 2) {\n                        o = h.x - r;\n                    } else {\n                        o = h.x + h.from + r;\n                    }\n                    var n = g.y - r;\n                    points.push({\n                        x: g.x,\n                        y: n\n                    });\n                    n = i.y - r;\n                    points.push({\n                        x: i.x,\n                        y: n\n                    });\n                } else {\n                    var n = g.y - r;\n                    points.push({\n                        x: g.x,\n                        y: n\n                    });\n                    points.push({\n                        x: i.x,\n                        y: n\n                    });\n                }\n            } else {\n                if (fromDir == 3 && toDir == 3) {\n                    if (from.y > to.y) {\n                        g = from;\n                        i = to;\n                        reverse = false;\n                    } else {\n                        g = to;\n                        i = from;\n                        reverse = true;\n                    }\n                    // var h = Model.getShapeById(g.id).props;\n                    // var v = Model.getShapeById(i.id).props;\n                    var h = g;\n                    var v = i;\n                    if (i.x >= h.x - r && i.x <= h.x + h.from + r) {\n                        var n = g.y + r;\n                        var o;\n                        if (i.x < h.x + h.from / 2) {\n                            o = h.x - r;\n                        } else {\n                            o = h.x + h.from + r;\n                        }\n                        points.push({\n                            x: g.x,\n                            y: n\n                        });\n                        n = i.y + r;\n                        points.push({\n                            x: i.x,\n                            y: n\n                        });\n                    } else {\n                        var n = g.y + r;\n                        points.push({\n                            x: g.x,\n                            y: n\n                        });\n                        points.push({\n                            x: i.x,\n                            y: n\n                        });\n                    }\n                } else {\n                    if (fromDir == 2 && toDir == 2) {\n                        if (from.x > to.x) {\n                            g = from;\n                            i = to;\n                            reverse = false;\n                        } else {\n                            g = to;\n                            i = from;\n                            reverse = true;\n                        }\n                        // var h = Model.getShapeById(g.id).props;\n                        // var v = Model.getShapeById(i.id).props;\n                        var h = g;\n                        var v = i;\n                        if (i.y >= h.y - r && i.y <= h.y + h.h + r) {\n                            var o = g.x + r;\n                            var n;\n                            if (i.y < h.y + h.h / 2) {\n                                n = h.y - r;\n                            } else {\n                                n = h.y + h.h + r;\n                            }\n                            points.push({\n                                x: o,\n                                y: g.y\n                            });\n                            o = i.x + r;\n                            points.push({\n                                x: o,\n                                y: i.y\n                            });\n                        } else {\n                            var o = g.x + r;\n                            points.push({\n                                x: o,\n                                y: g.y\n                            });\n                            points.push({\n                                x: o,\n                                y: i.y\n                            });\n                        }\n                    } else {\n                        if (fromDir == 4 && toDir == 4) {\n                            if (from.x < to.x) {\n                                g = from;\n                                i = to;\n                                reverse = false;\n                            } else {\n                                g = to;\n                                i = from;\n                                reverse = true;\n                            }\n                            // var h = Model.getShapeById(g.id).props;\n                            // var v = Model.getShapeById(i.id).props;\n                            var h = g;\n                            var v = i;\n                            if (i.y >= h.y - r && i.y <= h.y + h.h + r) {\n                                var o = g.x - r;\n                                var n;\n                                if (i.y < h.y + h.h / 2) {\n                                    n = h.y - r;\n                                } else {\n                                    n = h.y + h.h + r;\n                                }\n                                points.push({\n                                    x: o,\n                                    y: g.y\n                                });\n                                o = i.x - r;\n                                points.push({\n                                    x: o,\n                                    y: i.y\n                                });\n                            } else {\n                                var o = g.x - r;\n                                points.push({\n                                    x: o,\n                                    y: g.y\n                                });\n                                points.push({\n                                    x: o,\n                                    y: i.y\n                                });\n                            }\n                        } else {\n                            if (fromDir == 1 && toDir == 3 || fromDir == 3 && toDir == 1) {\n                                if (fromDir == 1) {\n                                    g = from;\n                                    i = to;\n                                    reverse = false;\n                                } else {\n                                    g = to;\n                                    i = from;\n                                    reverse = true;\n                                }\n                                // var h = Model.getShapeById(g.id).props;\n                                // var v = Model.getShapeById(i.id).props;\n                                var h = g;\n                                var v = i;\n                                if (i.y <= g.y) {\n                                    var n = g.y - height / 2;\n                                    points.push({\n                                        x: g.x,\n                                        y: n\n                                    });\n                                    points.push({\n                                        x: i.x,\n                                        y: n\n                                    });\n                                } else {\n                                    var a = h.x + h.from;\n                                    var j = v.x + v.from;\n                                    var n = g.y - r;\n                                    var o;\n                                    if (j >= h.x && v.x <= a) {\n                                        var z = h.x + h.from / 2;\n                                        if (i.x < z) {\n                                            o = h.x < v.x ? h.x - r : v.x - r;\n                                        } else {\n                                            o = a > j ? a + r : j + r;\n                                        }\n                                        if (v.y < g.y) {\n                                            n = v.y - r;\n                                        }\n                                    } else {\n                                        if (i.x < g.x) {\n                                            o = j + (h.x - j) / 2;\n                                        } else {\n                                            o = a + (v.x - a) / 2;\n                                        }\n                                    }\n                                    points.push({\n                                        x: g.x,\n                                        y: n\n                                    });\n                                    points.push({\n                                        x: o,\n                                        y: n\n                                    });\n                                    n = i.y + r;\n                                    points.push({\n                                        x: o,\n                                        y: n\n                                    });\n                                    points.push({\n                                        x: i.x,\n                                        y: n\n                                    });\n                                }\n                            } else {\n                                if (fromDir == 2 && toDir == 4 || fromDir == 4 && toDir == 2) {\n                                    if (fromDir == 2) {\n                                        g = from;\n                                        i = to;\n                                        reverse = false;\n                                    } else {\n                                        g = to;\n                                        i = from;\n                                        reverse = true;\n                                    }\n                                    // var h = Model.getShapeById(g.id).props;\n                                    // var v = Model.getShapeById(i.id).props;\n                                    var h = g;\n                                    var v = i;\n                                    if (i.x > g.x) {\n                                        var o = g.x + width / 2;\n                                        points.push({\n                                            x: o,\n                                            y: g.y\n                                        });\n                                        points.push({\n                                            x: o,\n                                            y: i.y\n                                        });\n                                    } else {\n                                        // var u = h.y + h.h;\n                                        // var p = v.y + v.h;\n                                        var u = h.y;\n                                        var p = v.y;\n                                        var o = g.x + r;\n                                        var n;\n                                        if (p >= h.y && v.y <= u) {\n                                            var z = h.y + h.h / 2;\n                                            if (i.y < z) {\n                                                n = h.y < v.y ? h.y - r : v.y - r;\n                                            } else {\n                                                n = u > p ? u + r : p + r;\n                                            }\n                                            if (v.x + v.from > g.x) {\n                                                o = v.x + v.from + r;\n                                            }\n                                        } else {\n                                            if (i.y < g.y) {\n                                                n = p + (h.y - p) / 2;\n                                            } else {\n                                                n = u + (v.y - u) / 2;\n                                            }\n                                        }\n                                        points.push({\n                                            x: o,\n                                            y: g.y\n                                        });\n                                        points.push({\n                                            x: o,\n                                            y: n\n                                        });\n                                        o = i.x - r;\n                                        points.push({\n                                            x: o,\n                                            y: n\n                                        });\n                                        points.push({\n                                            x: o,\n                                            y: i.y\n                                        });\n                                    }\n                                } else {\n                                    if (fromDir == 1 && toDir == 2 || fromDir == 2 && toDir == 1) {\n                                        if (fromDir == 2) {\n                                            g = from;\n                                            i = to;\n                                            reverse = false;\n                                        } else {\n                                            g = to;\n                                            i = from;\n                                            reverse = true;\n                                        }\n                                        // var h = Model.getShapeById(g.id).props;\n                                        // var v = Model.getShapeById(i.id).props;\n                                        var h = g;\n                                        var v = i;\n                                        if (i.x > g.x && i.y > g.y) {\n                                            points.push({\n                                                x: i.x,\n                                                y: g.y\n                                            });\n                                        } else {\n                                            if (i.x > g.x && v.x > g.x) {\n                                                var o;\n                                                if (v.x - g.x < r * 2) {\n                                                    o = g.x + (v.x - g.x) / 2;\n                                                } else {\n                                                    o = g.x + r;\n                                                }\n                                                var n = i.y - r;\n                                                points.push({\n                                                    x: o,\n                                                    y: g.y\n                                                });\n                                                points.push({\n                                                    x: o,\n                                                    y: n\n                                                });\n                                                points.push({\n                                                    x: i.x,\n                                                    y: n\n                                                });\n                                            } else {\n                                                if (i.x <= g.x && i.y > h.y + h.h) {\n                                                    var u = h.y + h.h;\n                                                    var o = g.x + r;\n                                                    var n;\n                                                    if (i.y - u < r * 2) {\n                                                        n = u + (i.y - u) / 2;\n                                                    } else {\n                                                        n = i.y - r;\n                                                    }\n                                                    points.push({\n                                                        x: o,\n                                                        y: g.y\n                                                    });\n                                                    points.push({\n                                                        x: o,\n                                                        y: n\n                                                    });\n                                                    points.push({\n                                                        x: i.x,\n                                                        y: n\n                                                    });\n                                                } else {\n                                                    var o;\n                                                    var j = v.x + v.from;\n                                                    if (j > g.x) {\n                                                        o = j + r;\n                                                    } else {\n                                                        o = g.x + r;\n                                                    }\n                                                    var n;\n                                                    if (i.y < h.y) {\n                                                        n = i.y - r;\n                                                    } else {\n                                                        n = h.y - r;\n                                                    }\n                                                    points.push({\n                                                        x: o,\n                                                        y: g.y\n                                                    });\n                                                    points.push({\n                                                        x: o,\n                                                        y: n\n                                                    });\n                                                    points.push({\n                                                        x: i.x,\n                                                        y: n\n                                                    });\n                                                }\n                                            }\n                                        }\n                                    } else {\n                                        if (fromDir == 1 && toDir == 4 || fromDir == 4 && toDir == 1) {\n                                            if (fromDir == 4) {\n                                                g = from;\n                                                i = to;\n                                                reverse = false;\n                                            } else {\n                                                g = to;\n                                                i = from;\n                                                reverse = true;\n                                            }\n                                            // var h = Model.getShapeById(g.id).props;\n                                            // var v = Model.getShapeById(i.id).props;\n                                            var h = g;\n                                            var v = i;\n                                            var j = v.x + v.from;\n                                            if (i.x < g.x && i.y > g.y) {\n                                                points.push({\n                                                    x: i.x,\n                                                    y: g.y\n                                                });\n                                            } else {\n                                                if (i.x < g.x && j < g.x) {\n                                                    var o;\n                                                    if (g.x - j < r * 2) {\n                                                        o = j + (g.x - j) / 2;\n                                                    } else {\n                                                        o = g.x - r;\n                                                    }\n                                                    var n = i.y - r;\n                                                    points.push({\n                                                        x: o,\n                                                        y: g.y\n                                                    });\n                                                    points.push({\n                                                        x: o,\n                                                        y: n\n                                                    });\n                                                    points.push({\n                                                        x: i.x,\n                                                        y: n\n                                                    });\n                                                } else {\n                                                    if (i.x >= g.x && i.y > h.y + h.h) {\n                                                        var u = h.y + h.h;\n                                                        var o = g.x - r;\n                                                        var n;\n                                                        if (i.y - u < r * 2) {\n                                                            n = u + (i.y - u) / 2;\n                                                        } else {\n                                                            n = i.y - r;\n                                                        }\n                                                        points.push({\n                                                            x: o,\n                                                            y: g.y\n                                                        });\n                                                        points.push({\n                                                            x: o,\n                                                            y: n\n                                                        });\n                                                        points.push({\n                                                            x: i.x,\n                                                            y: n\n                                                        });\n                                                    } else {\n                                                        var o;\n                                                        if (v.x < g.x) {\n                                                            o = v.x - r;\n                                                        } else {\n                                                            o = g.x - r;\n                                                        }\n                                                        var n;\n                                                        if (i.y < h.y) {\n                                                            n = i.y - r;\n                                                        } else {\n                                                            n = h.y - r;\n                                                        }\n                                                        points.push({\n                                                            x: o,\n                                                            y: g.y\n                                                        });\n                                                        points.push({\n                                                            x: o,\n                                                            y: n\n                                                        });\n                                                        points.push({\n                                                            x: i.x,\n                                                            y: n\n                                                        });\n                                                    }\n                                                }\n                                            }\n                                        } else {\n                                            if (fromDir == 2 && toDir == 3 || fromDir == 3 && toDir == 2) {\n                                                if (fromDir == 2) {\n                                                    g = from;\n                                                    i = to;\n                                                    reverse = false;\n                                                } else {\n                                                    g = to;\n                                                    i = from;\n                                                    reverse = true;\n                                                }\n                                                // var h = Model.getShapeById(g.id).props;\n                                                // var v = Model.getShapeById(i.id).props;\n                                                var h = g;\n                                                var v = i;\n                                                if (i.x > g.x && i.y < g.y) {\n                                                    points.push({\n                                                        x: i.x,\n                                                        y: g.y\n                                                    });\n                                                } else {\n                                                    if (i.x > g.x && v.x > g.x) {\n                                                        var o;\n                                                        if (v.x - g.x < r * 2) {\n                                                            o = g.x + (v.x - g.x) / 2;\n                                                        } else {\n                                                            o = g.x + r;\n                                                        }\n                                                        var n = i.y + r;\n                                                        points.push({\n                                                            x: o,\n                                                            y: g.y\n                                                        });\n                                                        points.push({\n                                                            x: o,\n                                                            y: n\n                                                        });\n                                                        points.push({\n                                                            x: i.x,\n                                                            y: n\n                                                        });\n                                                    } else {\n                                                        if (i.x <= g.x && i.y < h.y) {\n                                                            var o = g.x + r;\n                                                            var n;\n                                                            if (h.y - i.y < r * 2) {\n                                                                n = i.y + (h.y - i.y) / 2;\n                                                            } else {\n                                                                n = i.y + r;\n                                                            }\n                                                            points.push({\n                                                                x: o,\n                                                                y: g.y\n                                                            });\n                                                            points.push({\n                                                                x: o,\n                                                                y: n\n                                                            });\n                                                            points.push({\n                                                                x: i.x,\n                                                                y: n\n                                                            });\n                                                        } else {\n                                                            var o;\n                                                            var j = v.x + v.from;\n                                                            if (j > g.x) {\n                                                                o = j + r;\n                                                            } else {\n                                                                o = g.x + r;\n                                                            }\n                                                            var n;\n                                                            if (i.y > h.y + h.h) {\n                                                                n = i.y + r;\n                                                            } else {\n                                                                n = h.y + h.h + r;\n                                                            }\n                                                            points.push({\n                                                                x: o,\n                                                                y: g.y\n                                                            });\n                                                            points.push({\n                                                                x: o,\n                                                                y: n\n                                                            });\n                                                            points.push({\n                                                                x: i.x,\n                                                                y: n\n                                                            });\n                                                        }\n                                                    }\n                                                }\n                                            } else {\n                                                if (fromDir == 3 && toDir == 4 || fromDir == 4 && toDir == 3) {\n                                                    if (fromDir == 4) {\n                                                        g = from;\n                                                        i = to;\n                                                        reverse = false;\n                                                    } else {\n                                                        g = to;\n                                                        i = from;\n                                                        reverse = true;\n                                                    }\n                                                    // var h = Model.getShapeById(g.id).props;\n                                                    // var v = Model.getShapeById(i.id).props;\n                                                    var h = g;\n                                                    var v = i;\n                                                    var j = v.x + v.from;\n                                                    if (i.x < g.x && i.y < g.y) {\n                                                        points.push({\n                                                            x: i.x,\n                                                            y: g.y\n                                                        });\n                                                    } else {\n                                                        if (i.x < g.x && j < g.x) {\n                                                            var o;\n                                                            if (g.x - j < r * 2) {\n                                                                o = j + (g.x - j) / 2;\n                                                            } else {\n                                                                o = g.x - r;\n                                                            }\n                                                            var n = i.y + r;\n                                                            points.push({\n                                                                x: o,\n                                                                y: g.y\n                                                            });\n                                                            points.push({\n                                                                x: o,\n                                                                y: n\n                                                            });\n                                                            points.push({\n                                                                x: i.x,\n                                                                y: n\n                                                            });\n                                                        } else {\n                                                            if (i.x >= g.x && i.y < h.y) {\n                                                                var o = g.x - r;\n                                                                var n;\n                                                                if (h.y - i.y < r * 2) {\n                                                                    n = i.y + (h.y - i.y) / 2;\n                                                                } else {\n                                                                    n = i.y + r;\n                                                                }\n                                                                points.push({\n                                                                    x: o,\n                                                                    y: g.y\n                                                                });\n                                                                points.push({\n                                                                    x: o,\n                                                                    y: n\n                                                                });\n                                                                points.push({\n                                                                    x: i.x,\n                                                                    y: n\n                                                                });\n                                                            } else {\n                                                                var o;\n                                                                if (v.x < g.x) {\n                                                                    o = v.x - r;\n                                                                } else {\n                                                                    o = g.x - r;\n                                                                }\n                                                                var n;\n                                                                if (i.y > h.y + h.h) {\n                                                                    n = i.y + r;\n                                                                } else {\n                                                                    n = h.y + h.h + r;\n                                                                }\n                                                                points.push({\n                                                                    x: o,\n                                                                    y: g.y\n                                                                });\n                                                                points.push({\n                                                                    x: o,\n                                                                    y: n\n                                                                });\n                                                                points.push({\n                                                                    x: i.x,\n                                                                    y: n\n                                                                });\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (reverse) {\n                points.reverse();\n            }\n        } else {\n            if (from.id != null || to.id != null) {\n                var g, i, reverse, B;\n                if (from.id != null) {\n                    g = from;\n                    i = to;\n                    reverse = false;\n                    B = from.angle;\n                } else {\n                    g = to;\n                    i = from;\n                    reverse = true;\n                    B = to.angle;\n                }\n                // var e = Model.getShapeById(g.id).props;\n                var e = from;\n                if (B >= PI / 4 && B < PI / 4 * 3) {\n                    if (i.y < g.y) {\n                        if (width >= height) {\n                            points.push({\n                                x: g.x,\n                                y: i.y\n                            });\n                        } else {\n                            var z = height / 2;\n                            points.push({\n                                x: g.x,\n                                y: g.y - z\n                            });\n                            points.push({\n                                x: i.x,\n                                y: g.y - z\n                            });\n                        }\n                    } else {\n                        points.push({\n                            x: g.x,\n                            y: g.y - r\n                        });\n                        if (width >= height) {\n                            if (i.x >= e.x - r && i.x <= e.x + e.from + r) {\n                                var q = e.x + e.from / 2;\n                                if (i.x < q) {\n                                    points.push({\n                                        x: e.x - r,\n                                        y: g.y - r\n                                    });\n                                    points.push({\n                                        x: e.x - r,\n                                        y: i.y\n                                    });\n                                } else {\n                                    points.push({\n                                        x: e.x + e.from + r,\n                                        y: g.y - r\n                                    });\n                                    points.push({\n                                        x: e.x + e.from + r,\n                                        y: i.y\n                                    });\n                                }\n                            } else {\n                                if (i.x < e.x) {\n                                    points.push({\n                                        x: i.x + r,\n                                        y: g.y - r\n                                    });\n                                    points.push({\n                                        x: i.x + r,\n                                        y: i.y\n                                    });\n                                } else {\n                                    points.push({\n                                        x: i.x - r,\n                                        y: g.y - r\n                                    });\n                                    points.push({\n                                        x: i.x - r,\n                                        y: i.y\n                                    });\n                                }\n                            }\n                        } else {\n                            if (i.x >= e.x - r && i.x <= e.x + e.from + r) {\n                                var q = e.x + e.from / 2;\n                                if (i.x < q) {\n                                    points.push({\n                                        x: e.x - r,\n                                        y: g.y - r\n                                    });\n                                    points.push({\n                                        x: e.x - r,\n                                        y: i.y - r\n                                    });\n                                    points.push({\n                                        x: i.x,\n                                        y: i.y - r\n                                    });\n                                } else {\n                                    points.push({\n                                        x: e.x + e.from + r,\n                                        y: g.y - r\n                                    });\n                                    points.push({\n                                        x: e.x + e.from + r,\n                                        y: i.y - r\n                                    });\n                                    points.push({\n                                        x: i.x,\n                                        y: i.y - r\n                                    });\n                                }\n                            } else {\n                                points.push({\n                                    x: i.x,\n                                    y: g.y - r\n                                });\n                            }\n                        }\n                    }\n                } else {\n                    if (B >= PI / 4 * 3 && B < PI / 4 * 5) {\n                        if (i.x > g.x) {\n                            if (width >= height) {\n                                var z = width / 2;\n                                points.push({\n                                    x: g.x + z,\n                                    y: g.y\n                                });\n                                points.push({\n                                    x: g.x + z,\n                                    y: i.y\n                                });\n                            } else {\n                                points.push({\n                                    x: i.x,\n                                    y: g.y\n                                });\n                            }\n                        } else {\n                            points.push({\n                                x: g.x + r,\n                                y: g.y\n                            });\n                            if (width >= height) {\n                                if (i.y >= e.y - r && i.y <= e.y + e.h + r) {\n                                    var q = e.y + e.h / 2;\n                                    if (i.y < q) {\n                                        points.push({\n                                            x: g.x + r,\n                                            y: e.y - r\n                                        });\n                                        points.push({\n                                            x: i.x + r,\n                                            y: e.y - r\n                                        });\n                                        points.push({\n                                            x: i.x + r,\n                                            y: i.y\n                                        });\n                                    } else {\n                                        points.push({\n                                            x: g.x + r,\n                                            y: e.y + e.h + r\n                                        });\n                                        points.push({\n                                            x: i.x + r,\n                                            y: e.y + e.h + r\n                                        });\n                                        points.push({\n                                            x: i.x + r,\n                                            y: i.y\n                                        });\n                                    }\n                                } else {\n                                    points.push({\n                                        x: g.x + r,\n                                        y: i.y\n                                    });\n                                }\n                            } else {\n                                if (i.y >= e.y - r && i.y <= e.y + e.h + r) {\n                                    var q = e.y + e.h / 2;\n                                    if (i.y < q) {\n                                        points.push({\n                                            x: g.x + r,\n                                            y: e.y - r\n                                        });\n                                        points.push({\n                                            x: i.x,\n                                            y: e.y - r\n                                        });\n                                    } else {\n                                        points.push({\n                                            x: g.x + r,\n                                            y: e.y + e.h + r\n                                        });\n                                        points.push({\n                                            x: i.x,\n                                            y: e.y + e.h + r\n                                        });\n                                    }\n                                } else {\n                                    if (i.y < g.y) {\n                                        points.push({\n                                            x: g.x + r,\n                                            y: i.y + r\n                                        });\n                                        points.push({\n                                            x: i.x,\n                                            y: i.y + r\n                                        });\n                                    } else {\n                                        points.push({\n                                            x: g.x + r,\n                                            y: i.y - r\n                                        });\n                                        points.push({\n                                            x: i.x,\n                                            y: i.y - r\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    } else {\n                        if (B >= PI / 4 * 5 && B < PI / 4 * 7) {\n                            if (i.y > g.y) {\n                                if (width >= height) {\n                                    points.push({\n                                        x: g.x,\n                                        y: i.y\n                                    });\n                                } else {\n                                    var z = height / 2;\n                                    points.push({\n                                        x: g.x,\n                                        y: g.y + z\n                                    });\n                                    points.push({\n                                        x: i.x,\n                                        y: g.y + z\n                                    });\n                                }\n                            } else {\n                                points.push({\n                                    x: g.x,\n                                    y: g.y + r\n                                });\n                                if (width >= height) {\n                                    if (i.x >= e.x - r && i.x <= e.x + e.from + r) {\n                                        var q = e.x + e.from / 2;\n                                        if (i.x < q) {\n                                            points.push({\n                                                x: e.x - r,\n                                                y: g.y + r\n                                            });\n                                            points.push({\n                                                x: e.x - r,\n                                                y: i.y\n                                            });\n                                        } else {\n                                            points.push({\n                                                x: e.x + e.from + r,\n                                                y: g.y + r\n                                            });\n                                            points.push({\n                                                x: e.x + e.from + r,\n                                                y: i.y\n                                            });\n                                        }\n                                    } else {\n                                        if (i.x < e.x) {\n                                            points.push({\n                                                x: i.x + r,\n                                                y: g.y + r\n                                            });\n                                            points.push({\n                                                x: i.x + r,\n                                                y: i.y\n                                            });\n                                        } else {\n                                            points.push({\n                                                x: i.x - r,\n                                                y: g.y + r\n                                            });\n                                            points.push({\n                                                x: i.x - r,\n                                                y: i.y\n                                            });\n                                        }\n                                    }\n                                } else {\n                                    if (i.x >= e.x - r && i.x <= e.x + e.from + r) {\n                                        var q = e.x + e.from / 2;\n                                        if (i.x < q) {\n                                            points.push({\n                                                x: e.x - r,\n                                                y: g.y + r\n                                            });\n                                            points.push({\n                                                x: e.x - r,\n                                                y: i.y + r\n                                            });\n                                            points.push({\n                                                x: i.x,\n                                                y: i.y + r\n                                            });\n                                        } else {\n                                            points.push({\n                                                x: e.x + e.from + r,\n                                                y: g.y + r\n                                            });\n                                            points.push({\n                                                x: e.x + e.from + r,\n                                                y: i.y + r\n                                            });\n                                            points.push({\n                                                x: i.x,\n                                                y: i.y + r\n                                            });\n                                        }\n                                    } else {\n                                        points.push({\n                                            x: i.x,\n                                            y: g.y + r\n                                        });\n                                    }\n                                }\n                            }\n                        } else {\n                            if (i.x < g.x) {\n                                if (width >= height) {\n                                    var z = width / 2;\n                                    points.push({\n                                        x: g.x - z,\n                                        y: g.y\n                                    });\n                                    points.push({\n                                        x: g.x - z,\n                                        y: i.y\n                                    });\n                                } else {\n                                    points.push({\n                                        x: i.x,\n                                        y: g.y\n                                    });\n                                }\n                            } else {\n                                points.push({\n                                    x: g.x - r,\n                                    y: g.y\n                                });\n                                if (width >= height) {\n                                    if (i.y >= e.y - r && i.y <= e.y + e.h + r) {\n                                        var q = e.y + e.h / 2;\n                                        if (i.y < q) {\n                                            points.push({\n                                                x: g.x - r,\n                                                y: e.y - r\n                                            });\n                                            points.push({\n                                                x: i.x - r,\n                                                y: e.y - r\n                                            });\n                                            points.push({\n                                                x: i.x - r,\n                                                y: i.y\n                                            });\n                                        } else {\n                                            points.push({\n                                                x: g.x - r,\n                                                y: e.y + e.h + r\n                                            });\n                                            points.push({\n                                                x: i.x - r,\n                                                y: e.y + e.h + r\n                                            });\n                                            points.push({\n                                                x: i.x - r,\n                                                y: i.y\n                                            });\n                                        }\n                                    } else {\n                                        points.push({\n                                            x: g.x - r,\n                                            y: i.y\n                                        });\n                                    }\n                                } else {\n                                    if (i.y >= e.y - r && i.y <= e.y + e.h + r) {\n                                        var q = e.y + e.h / 2;\n                                        if (i.y < q) {\n                                            points.push({\n                                                x: g.x - r,\n                                                y: e.y - r\n                                            });\n                                            points.push({\n                                                x: i.x,\n                                                y: e.y - r\n                                            });\n                                        } else {\n                                            points.push({\n                                                x: g.x - r,\n                                                y: e.y + e.h + r\n                                            });\n                                            points.push({\n                                                x: i.x,\n                                                y: e.y + e.h + r\n                                            });\n                                        }\n                                    } else {\n                                        if (i.y < g.y) {\n                                            points.push({\n                                                x: g.x - r,\n                                                y: i.y + r\n                                            });\n                                            points.push({\n                                                x: i.x,\n                                                y: i.y + r\n                                            });\n                                        } else {\n                                            points.push({\n                                                x: g.x - r,\n                                                y: i.y - r\n                                            });\n                                            points.push({\n                                                x: i.x,\n                                                y: i.y - r\n                                            });\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (reverse) {\n                    points.reverse();\n                }\n            } else {\n                if (width >= height) {\n                    var z = (to.x - from.x) / 2;\n                    points.push({\n                        x: from.x + z,\n                        y: from.y\n                    });\n                    points.push({\n                        x: from.x + z,\n                        y: to.y\n                    });\n                } else {\n                    var z = (to.y - from.y) / 2;\n                    points.push({\n                        x: from.x,\n                        y: from.y + z\n                    });\n                    points.push({\n                        x: to.x,\n                        y: from.y + z\n                    });\n                }\n            }\n        }\n        // } else {\n        //     if (link.linkerType == \"curve\") {\n        //         var from = link.from;\n        //         var to = link.to;\n        //         var f = this.measureDistance(from, to);\n        //         var k = f * 0.4;\n        //         function s(E, F) {\n        //             if (E.id != null) {\n        //                 return {\n        //                     x: E.x - k * Math.cos(E.angle),\n        //                     y: E.y - k * Math.sin(E.angle)\n        //                 };\n        //             } else {\n        //                 var G = Math.abs(E.y - F.y);\n        //                 var y = Math.abs(E.x - F.x);\n        //                 var H = Math.atan(G / y);\n        //                 var x = {};\n        //                 if (E.x <= F.x) {\n        //                     x.x = E.x + k * Math.cos(H);\n        //                 } else {\n        //                     x.x = E.x - k * Math.cos(H);\n        //                 }\n        //                 if (E.y <= F.y) {\n        //                     x.y = E.y + k * Math.sin(H);\n        //                 } else {\n        //                     x.y = E.y - k * Math.sin(H);\n        //                 }\n        //                 return x;\n        //             }\n        //         }\n        //         points.push(s(from, to));\n        //         points.push(s(to, from));\n        //     }\n        // }\n        return points;\n    }\n};\n\nexports.default = Link;\n\n//# sourceURL=webpack:///./src/Link.js?");

/***/ }),

/***/ "./src/Observable.js":
/*!***************************!*\
  !*** ./src/Observable.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 事件订阅，发布（DOM，对象）\r\n */\nvar Observable = function () {\n    function Observable() {\n        _classCallCheck(this, Observable);\n\n        this.handlers = {};\n    }\n\n    /**\r\n     * DOM事件绑定\r\n     */\n\n\n    _createClass(Observable, [{\n        key: \"bind\",\n        value: function bind(el, type, callback, scope, capture) {\n            var me = this;\n            me.handlers[type] = me.handlers[type] || [];\n\n            if (window.addEventListener) {\n                return function (el, type, callback, scope, capture) {\n                    function f(evt) {\n                        callback(evt, scope);\n                    }\n                    me.handlers[type].push(f);\n                    el.addEventListener(type, f, !!capture);\n                }(el, type, callback, scope, capture);\n            } else if (window.attachEvent) {\n                return function (el, type, callback, scope) {\n                    function f(evt) {\n                        callback(evt, scope);\n                    }\n                    me.handlers[type].push(f);\n                    el.attachEvent(\"on\" + type, f);\n                }(el, type, callback, scope);\n            } else {\n                return function (el, type, callback, scope) {\n                    el[on + \"type\"] = callback;\n                }(el, type, callback, scope);\n            }\n        }\n\n        /**\r\n         * DOM事件移除\r\n         */\n\n    }, {\n        key: \"unbind\",\n        value: function unbind(el, type) {\n            var me = this;\n            if (window.addEventListener) {\n                return function (el, type) {\n                    if (me.handlers[type]) {\n                        var i = 0,\n                            len = me.handlers[type].length;\n                        for (; i < len; i++) {\n                            el.removeEventListener(type, me.handlers[type]);\n                        }\n                        delete me.handlers[type];\n                    }\n                }(el, type);\n            } else if (window.attachEvent) {\n                return function (el, type) {\n                    if (me.handlers[type]) {\n                        var i = 0,\n                            len = me.handlers[type].length;\n                        for (; i < len; i++) {\n                            el.removeEventListener(\"on\" + type, me.handlers[type]);\n                        }\n                        delete me.handlers[type];\n                    }\n                }(el, type);\n            } else {\n                return function (el, type) {\n                    el[on + \"type\"] = null;\n                }(el, type);\n            }\n        }\n\n        /**\r\n         * 对象事件绑定\r\n         */\n\n    }, {\n        key: \"on\",\n        value: function on(type, fn, ctx) {\n            var me = this;\n            if (!(fn instanceof Function)) return;\n\n            if (!me.handlers[type]) me.handlers[type] = [];\n\n            me.handlers[type].push({\n                fn: fn,\n                ctx: ctx || null\n            });\n        }\n\n        /**\r\n         * 对象事件触发\r\n         */\n\n    }, {\n        key: \"trigger\",\n        value: function trigger(type, args) {\n            var me = this;\n            if (!me.handlers[type]) return;\n\n            args = Object.prototype.toString(args) === \"[Object, Array]\" ? args : [args];\n\n            me.handlers[type].forEach(function (item) {\n                item.fn.apply(item.ctx, args);\n            });\n        }\n\n        /**\r\n         * 对象事件移除\r\n         */\n\n    }, {\n        key: \"off\",\n        value: function off(type, fn) {\n            var me = this;\n            if (!me.handlers[type] || !me.handlers[type].length) return;\n\n            if (!fn) {\n                me.handlers[type] = [];\n            } else {\n                var fns = [];\n                for (var i = 0; i < me.handlers[type].length; i++) {\n                    if (me.handlers[type][i].fn !== fn) {\n                        fns.push(me.handlers[type][i]);\n                    }\n                }\n                me.handlers[type] = fns;\n            }\n        }\n    }]);\n\n    return Observable;\n}();\n\nexports.default = Observable;\n\n//# sourceURL=webpack:///./src/Observable.js?");

/***/ }),

/***/ "./src/Options.js":
/*!************************!*\
  !*** ./src/Options.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    default: {\n        marker: \"ARROW\",\n        lineDashType: \"SOLID\",\n        lineType: \"BEZIER\",\n        strokeWidth: 2,\n        padding: 20,\n        useGuideLine: false,\n        useGrid: false\n    }\n};\n\n//# sourceURL=webpack:///./src/Options.js?");

/***/ }),

/***/ "./src/Plumb.js":
/*!**********************!*\
  !*** ./src/Plumb.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Anchor = __webpack_require__(/*! ./Anchor */ \"./src/Anchor.js\");\n\nvar _Anchor2 = _interopRequireDefault(_Anchor);\n\nvar _Source = __webpack_require__(/*! ./Source */ \"./src/Source.js\");\n\nvar _Source2 = _interopRequireDefault(_Source);\n\nvar _EndPoint = __webpack_require__(/*! ./EndPoint */ \"./src/EndPoint.js\");\n\nvar _EndPoint2 = _interopRequireDefault(_EndPoint);\n\nvar _Connector = __webpack_require__(/*! ./Connector */ \"./src/Connector.js\");\n\nvar _Connector2 = _interopRequireDefault(_Connector);\n\nvar _GuideLine = __webpack_require__(/*! ./GuideLine */ \"./src/GuideLine.js\");\n\nvar _GuideLine2 = _interopRequireDefault(_GuideLine);\n\nvar _Grid = __webpack_require__(/*! ./Grid */ \"./src/Grid.js\");\n\nvar _Grid2 = _interopRequireDefault(_Grid);\n\nvar _Drag = __webpack_require__(/*! ./Drag */ \"./src/Drag.js\");\n\nvar _Drag2 = _interopRequireDefault(_Drag);\n\nvar _Util = __webpack_require__(/*! ./Util */ \"./src/Util.js\");\n\nvar _Util2 = _interopRequireDefault(_Util);\n\nvar _Link = __webpack_require__(/*! ./Link */ \"./src/Link.js\");\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nvar _Render = __webpack_require__(/*! ./Render */ \"./src/Render.js\");\n\nvar _Render2 = _interopRequireDefault(_Render);\n\nvar _DOMUtil = __webpack_require__(/*! ./DOMUtil */ \"./src/DOMUtil.js\");\n\nvar _DOMUtil2 = _interopRequireDefault(_DOMUtil);\n\nvar _EleResize = __webpack_require__(/*! ./EleResize */ \"./src/EleResize.js\");\n\nvar _EleResize2 = _interopRequireDefault(_EleResize);\n\nvar _Observable2 = __webpack_require__(/*! ./Observable */ \"./src/Observable.js\");\n\nvar _Observable3 = _interopRequireDefault(_Observable2);\n\nvar _Options = __webpack_require__(/*! ./Options */ \"./src/Options.js\");\n\nvar _Options2 = _interopRequireDefault(_Options);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //组件\n\n\n//能力\n\n\n//参数\n\n\n/**\r\n * 主入口，承上（组件）启下（能力）\r\n */\nvar Plumb = function (_Observable) {\n    _inherits(Plumb, _Observable);\n\n    function Plumb(targets, config) {\n        _classCallCheck(this, Plumb);\n\n        var _this = _possibleConstructorReturn(this, (Plumb.__proto__ || Object.getPrototypeOf(Plumb)).call(this));\n\n        _this.flag = 1;\n        _this.config = Object.assign({}, _Options2.default.default, config);\n\n        _this.sources = [];\n        _this.endPoints = [];\n        _this.connectors = [];\n\n        //可拖拽元素\n        _this.draggableEls = {\n            SOURCE: [],\n            ENDPOINT: []\n        };\n\n        _this.tolerant = 2;\n        _this.guidLineH = null;\n        _this.guidLineV = null;\n\n        _this.wrapper = _DOMUtil2.default.find(\"class\", \"jtk-demo-main\");\n\n        if (!_this.wrapper) {\n            console.log(\"\");\n            return _possibleConstructorReturn(_this);\n        }\n\n        _this.init(targets);\n        _this.initEvents();\n        _this.initResizeEvent();\n        if (_this.config.useGuideLine) _this.initGuideLine();\n        if (_this.config.useGrid) _this.initGrid();\n        return _this;\n    }\n\n    /**\r\n     * 初始化\r\n     *\r\n     * @param {Array} targets\r\n     */\n\n\n    _createClass(Plumb, [{\n        key: \"init\",\n        value: function init(targets) {\n            if (!targets) return;\n            if (targets.length === undefined) targets = [targets];\n            Array.prototype.slice.call(targets).forEach(function (target) {\n                var source = new _Source2.default(target);\n\n                this.draggable(source, \"SOURCE\");\n                this.sources.push(source);\n            }, this);\n        }\n\n        /**\r\n         * 初始化全局事件\r\n         */\n\n    }, {\n        key: \"initEvents\",\n        value: function initEvents() {\n            this.bind(document, \"mousedown\", _Drag2.default.dragStart);\n            this.bind(document, \"mousemove\", _Drag2.default.dragging);\n            this.bind(document, \"mouseup\", _Drag2.default.dragEnd);\n        }\n\n        /**\r\n         * 初始化resize事件\r\n         */\n\n    }, {\n        key: \"initResizeEvent\",\n        value: function initResizeEvent() {\n            _EleResize2.default.on(this.wrapper, this.handleResize.bind(this));\n        }\n\n        /**\r\n         * 初始化辅助线\r\n         */\n\n    }, {\n        key: \"initGuideLine\",\n        value: function initGuideLine() {\n            this.guidLineH = new _GuideLine2.default(\"horizontal\");\n            this.guidLineV = new _GuideLine2.default(\"vertical\");\n            _DOMUtil2.default.appendToNode(this.guidLineH.element, this.wrapper);\n            _DOMUtil2.default.appendToNode(this.guidLineV.element, this.wrapper);\n        }\n\n        /**\r\n         * 初始化背景网格\r\n         */\n\n    }, {\n        key: \"initGrid\",\n        value: function initGrid() {\n            this.grid = new _Grid2.default(this.config.padding);\n            _DOMUtil2.default.insertBefore(this.grid.element, this.wrapper.firstChild);\n        }\n\n        /**\r\n         * dom元素大小变化\r\n         */\n\n    }, {\n        key: \"handleResize\",\n        value: function handleResize() {\n            this.grid.trigger(\"resize\");\n        }\n\n        /**\r\n         * 为目标元素添加拖拽能力\r\n         *\r\n         * @param {Object} target\r\n         * @param {String} type\r\n         */\n\n    }, {\n        key: \"draggable\",\n        value: function draggable(target, type) {\n            this.draggableEls[type].push(target);\n        }\n\n        /**\r\n         * 移除目标元素拖拽能力\r\n         *\r\n         * @param {Object} target\r\n         * @param {String} type\r\n         */\n\n    }, {\n        key: \"unDraggable\",\n        value: function unDraggable(target, type) {\n            target.off(\"moved\");\n            target.off(\"moveend\");\n\n            var els = this.draggableEls[type];\n            for (var i = 0; i < els.length; i++) {\n                if (els[i].uuid === target.uuid && els[i].type === target.type) {\n                    els.splice(i, 1);\n                    break;\n                }\n            }\n        }\n\n        /**\r\n         * 添加锚点\r\n         */\n\n    }, {\n        key: \"addEndPoint\",\n        value: function addEndPoint(source, opts) {\n            var pX = 0,\n                pY = 0;\n            var rect = source.getRect();\n            switch (opts.anchor) {\n                case \"top\":\n                    pX = rect.x + rect.w / 2 - opts.size / 2;\n                    pY = rect.y - opts.size / 2;\n                    break;\n                case \"bottom\":\n                    pX = rect.x + rect.w / 2 - opts.size / 2;\n                    pY = rect.y + rect.h - opts.size / 2;\n                    break;\n                case \"left\":\n                    pX = rect.x - opts.size / 2;\n                    pY = rect.y + rect.h / 2 - opts.size / 2;\n                    break;\n                case \"right\":\n                    pX = rect.x + rect.w - opts.size / 2;\n                    pY = rect.y + rect.h / 2 - opts.size / 2;\n                    break;\n                default:\n                    pX = rect.x + rect.w / 2 - opts.size / 2;\n                    pY = rect.y + rect.h - opts.size / 2;\n                    break;\n            }\n\n            var endPoint = new _EndPoint2.default(opts, pX, pY);\n            endPoint.element = _Render2.default.assembleEndPoint(endPoint);\n            _DOMUtil2.default.appendToNode(endPoint.element, _DOMUtil2.default.find(\"class\", \"jtk-demo-canvas\"));\n\n            //事件绑定\n            this.bind(endPoint.element, \"mouseover\", endPoint.onmouseover.bind(endPoint));\n            this.bind(endPoint.element, \"mouseout\", endPoint.onmouseout.bind(endPoint));\n\n            source.addEndPoint(endPoint);\n            //全局中保存一份\n            this.endPoints.push(endPoint);\n            this.draggable(endPoint, \"ENDPOINT\");\n        }\n\n        /**\r\n         * 创建移动的锚点\r\n         *\r\n         * @param {EndPoint} endPoint\r\n         */\n\n    }, {\n        key: \"createFloatingEndPoint\",\n        value: function createFloatingEndPoint(rect, uuid, originX, originY) {\n            var anchor = new _Anchor2.default(rect, uuid, originX, originY);\n            anchor.isMouseDown = true;\n\n            return anchor;\n        }\n\n        /**\r\n         * 添加连接线\r\n         *\r\n         * @param {EndPoint} targetEndPoint\r\n         * @param {String}   sourceID\r\n         */\n\n    }, {\n        key: \"addConnector\",\n        value: function addConnector(targetEndPoint, sourceID) {\n            var isBreak = false;\n            sourceID = sourceID || targetEndPoint.uuid;\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = plumb.sources[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var source = _step.value;\n                    var _iteratorNormalCompletion2 = true;\n                    var _didIteratorError2 = false;\n                    var _iteratorError2 = undefined;\n\n                    try {\n                        for (var _iterator2 = source.endPoints[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                            var endPoint = _step2.value;\n\n                            if (endPoint.uuid === sourceID) {\n                                var uuid = endPoint.uuid + \"^-^\" + targetEndPoint.uuid;\n                                if (!plumb.connectors[uuid]) {\n                                    var connector = new _Connector2.default(endPoint, targetEndPoint);\n                                    plumb.connectors[uuid] = connector;\n\n                                    var _connector$getSizeAnd = connector.getSizeAndBound(),\n                                        width = _connector$getSizeAnd.width,\n                                        height = _connector$getSizeAnd.height,\n                                        bound = _connector$getSizeAnd.bound,\n                                        size = _connector$getSizeAnd.size;\n\n                                    connector.element = _Render2.default.assembleConnector(width, height, bound, size, plumb.config.strokeWidth);\n                                    var path = _DOMUtil2.default.find(\"tag\", \"path\", connector.element);\n                                    _DOMUtil2.default.appendToNode(connector.element, _DOMUtil2.default.find(\"class\", \"jtk-demo-canvas\"));\n\n                                    _Render2.default.updatePath(path, _Link2.default.calcPathPointArr(width, height, bound, size, connector.getSource(), connector.getTarget()));\n\n                                    //事件绑定\n                                    this.bind(path, \"click\", connector.onclick.bind(connector)());\n                                    this.bind(path, \"mouseover\", connector.onmouseover.bind(connector));\n                                    this.bind(path, \"mouseout\", connector.onmouseout.bind(connector));\n\n                                    return connector;\n                                }\n\n                                isBreak = true;\n                                break;\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError2 = true;\n                        _iteratorError2 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                                _iterator2.return();\n                            }\n                        } finally {\n                            if (_didIteratorError2) {\n                                throw _iteratorError2;\n                            }\n                        }\n                    }\n\n                    if (isBreak) break;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            return false;\n        }\n\n        /**\r\n         * 删除连接线\r\n         *\r\n         * @param {EndPoint} point\r\n         * @param {EndPoint} point\r\n         */\n\n    }, {\n        key: \"deleteConnector\",\n        value: function deleteConnector(point, target) {\n            var isBreak = false;\n            var sourceID = point.uuid;\n            var targetID = target && target.uuid || sourceID;\n\n            for (var uuid in plumb.connectors) {\n                var connector = plumb.connectors[uuid];\n                var ids = connector.uuid.split(\"^-^\");\n                if (ids[0] === sourceID && ids[1] === targetID) {\n                    _Render2.default.deleteConnector(connector);\n                    delete plumb.connectors[uuid];\n                }\n            }\n        }\n\n        /**\r\n         * 更新连接线\r\n         *\r\n         * @param {String} UUID\r\n         */\n\n    }, {\n        key: \"updateConnector\",\n        value: function updateConnector(UUID) {\n            for (var uuid in plumb.connectors) {\n                var connector = plumb.connectors[uuid];\n                if (UUID === connector.getSource().uuid || UUID === connector.getTarget().uuid) {\n                    var _connector$getSizeAnd2 = connector.getSizeAndBound(),\n                        width = _connector$getSizeAnd2.width,\n                        height = _connector$getSizeAnd2.height,\n                        bound = _connector$getSizeAnd2.bound,\n                        size = _connector$getSizeAnd2.size;\n\n                    _Render2.default.updateConnector(connector, width, height, bound, size);\n                }\n            }\n        }\n\n        /**\r\n         * 添加marker箭头，连接线使用\r\n         *\r\n         * @param {String} connectorUUID\r\n         * @param {Array}  rect\r\n         * @param {String} markerType\r\n         * @param {String} markerId\r\n         */\n\n    }, {\n        key: \"addMarker\",\n        value: function addMarker(connectorUUID, rect, markerType, markerId) {\n            var connector = plumb.connectors[connectorUUID];\n            var parentWrapper = _DOMUtil2.default.find(\"tag\", \"svg\", connector.element);\n            var marker = _Render2.default.assembleMarker(rect, markerType, markerId);\n            _DOMUtil2.default.appendToNode(marker, parentWrapper);\n\n            var path = _DOMUtil2.default.find(\"tag\", \"path\", parentWrapper);\n            _DOMUtil2.default.setAttribute(path, \"marker-end\", \"url(#\" + markerId + \")\");\n        }\n\n        /**\r\n         * 显示辅助线\r\n         *\r\n         * @param {Array} infos\r\n         */\n\n    }, {\n        key: \"showGuide\",\n        value: function showGuide(infos) {\n            var me = this;\n            var length = infos.length;\n\n            if (length === 2) {\n                me.guidLineH.show(infos[0].x + \"px\", infos[0].y + \"px\");\n                me.guidLineV.show(infos[1].x + \"px\", infos[1].y + \"px\");\n            } else if (length === 1) {\n                var inf = infos[0];\n                if (inf.type === \"horizontal\") {\n                    me.guidLineH.show(inf.x + \"px\", inf.y + \"px\");\n                    me.guidLineV.hide();\n                } else {\n                    me.guidLineV.show(inf.x + \"px\", inf.y + \"px\");\n                    me.guidLineH.hide();\n                }\n            } else if (length === 0) {\n                me.hideGuide();\n            }\n        }\n\n        /**\r\n         * 隐藏辅助线\r\n         */\n\n    }, {\n        key: \"hideGuide\",\n        value: function hideGuide() {\n            this.guidLineH.hide();\n            this.guidLineV.hide();\n        }\n\n        /**\r\n         * 获取可拖动窗体集合\r\n         */\n\n    }, {\n        key: \"getSources\",\n        value: function getSources() {\n            return this.sources;\n        }\n    }]);\n\n    return Plumb;\n}(_Observable3.default);\n\nexports.default = Plumb;\n\n//# sourceURL=webpack:///./src/Plumb.js?");

/***/ }),

/***/ "./src/Render.js":
/*!***********************!*\
  !*** ./src/Render.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Link = __webpack_require__(/*! ./Link */ \"./src/Link.js\");\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nvar _Util = __webpack_require__(/*! ./Util */ \"./src/Util.js\");\n\nvar _Util2 = _interopRequireDefault(_Util);\n\nvar _DOMUtil = __webpack_require__(/*! ./DOMUtil */ \"./src/DOMUtil.js\");\n\nvar _DOMUtil2 = _interopRequireDefault(_DOMUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 渲染类，根据构建好的参数进行dom神马的创建，更新\r\n */\nvar Render = function () {\n    function Render() {\n        _classCallCheck(this, Render);\n    }\n\n    _createClass(Render, null, [{\n        key: \"updatePosition\",\n\n        /**\r\n         * 更新dom元素位置\r\n         *\r\n         * @param {HTMLDocument} el\r\n         * @param {Number} x\r\n         * @param {Number} y\r\n         */\n        value: function updatePosition(el, x, y) {\n            _DOMUtil2.default.setPosition(el, { left: x, top: y });\n        }\n\n        /**\r\n         * 创建div\r\n         *\r\n         * @param {String} id\r\n         * @param {String} className\r\n         * @param {Object} style\r\n         */\n\n    }, {\n        key: \"createDiv\",\n        value: function createDiv(id, className, style) {\n            style = Object.assign({}, style, { position: \"absolute\", zIndex: 1 });\n\n            return _DOMUtil2.default.createElement(\"div\", style, className, { id: id });\n        }\n\n        /**\r\n         * 创建SVG\r\n         *\r\n         * @param {Number} width\r\n         * @param {Number} height\r\n         * @param {Object} style\r\n         */\n\n    }, {\n        key: \"createSVG\",\n        value: function createSVG(width, height, style) {\n            style = Object.assign({}, style, { position: \"absolute\" });\n\n            return _DOMUtil2.default.createElementNS(_DOMUtil2.default.ns, \"svg\", style, null, {\n                version: \"1.1\",\n                position: \"absolute\",\n                width: width,\n                height: height\n            });\n        }\n\n        /**\r\n         * 创建SVG圆\r\n         *\r\n         * @param {Number} x\r\n         * @param {Number} y\r\n         * @param {Number} r\r\n         */\n\n    }, {\n        key: \"createCircle\",\n        value: function createCircle(x, y, r) {\n            return _DOMUtil2.default.createElementNS(_DOMUtil2.default.ns, \"circle\", {}, null, {\n                id: _Util2.default.guid(),\n                cx: x,\n                cy: y,\n                r: r,\n                version: \"1.1\",\n                fill: \"gray\",\n                stroke: \"none\"\n            });\n        }\n\n        /**\r\n         * 创建箭头\r\n         *\r\n         * @param {Number} x\r\n         * @param {Number} y\r\n         * @param {Number} r\r\n         */\n\n    }, {\n        key: \"createArrow\",\n        value: function createArrow(x, y, r) {\n            var w = 2 * r;\n            var h = 2 * r;\n\n            return _DOMUtil2.default.createElementNS(_DOMUtil2.default.ns, \"path\", {}, null, {\n                d: \"M0,0 L\" + w + \",\" + r + \" L0,\" + h + \" L\" + r + \",\" + r + \" L0,0\",\n                fill: \"gray\",\n                stroke: \"white\"\n            });\n        }\n\n        /**\r\n         * 创建SVG路径\r\n         *\r\n         * @param {Number} strokeWidth\r\n         */\n\n    }, {\n        key: \"createPath\",\n        value: function createPath(strokeWidth) {\n            return _DOMUtil2.default.createElementNS(_DOMUtil2.default.ns, \"path\", {}, null, {\n                fill: \"none\",\n                stroke: \"gray\",\n                \"stroke-width\": strokeWidth || 2,\n                \"pointer-events\": \"auto\"\n            });\n        }\n\n        /**\r\n         * 更新路径\r\n         *\r\n         * @param {HTMLSVGElement} path\r\n         * @param {Array}          pointArr\r\n         */\n\n    }, {\n        key: \"updatePath\",\n        value: function updatePath(path, pointArr) {\n            if (!pointArr.length) return;\n\n            var p1 = pointArr[0];\n            var d = \"M\" + p1[0] + \",\" + p1[1];\n\n            for (var i = 1; i < pointArr.length; i++) {\n                var p = pointArr[i];\n\n                d += \" \";\n                if (i === 1) d += _Util2.default.getPathCMD(plumb.config.lineType);\n                d += p[0] + \",\" + p[1];\n            }\n\n            var strokeDasharray = _Util2.default.getDashStyle(plumb.config.lineDashType, plumb.config.strokeWidth).toString();\n\n            _DOMUtil2.default.setAttributes(path, {\n                d: d,\n                \"stroke-dasharray\": strokeDasharray\n            });\n        }\n\n        /**\r\n         * 添加endPoint\r\n         *\r\n         * @param {EndPoint} endPoint\r\n         */\n\n    }, {\n        key: \"assembleEndPoint\",\n        value: function assembleEndPoint(endPoint) {\n            //if (!endPoint.element) {\n            var rect = endPoint.getRect();\n            var div = Render.createDiv(endPoint.uuid, \"endpoint\", {\n                left: rect.x + \"px\",\n                top: rect.y + \"px\",\n                width: rect.w + \"px\",\n                height: rect.h + \"px\"\n            });\n            var svg = Render.createSVG(rect.w, rect.h, {\n                left: \"0px\",\n                top: \"0px\",\n                opacity: 0.8\n            });\n            var circle = Render.createCircle(rect.w / 2, rect.w / 2, rect.w / 2);\n\n            _DOMUtil2.default.appendToNode(circle, svg);\n            _DOMUtil2.default.appendToNode(svg, div);\n            return div;\n            //}\n        }\n\n        /**\r\n         *  添加移动锚点\r\n         *\r\n         * @param {Anchor} anchor\r\n         */\n\n    }, {\n        key: \"assembleAnchor\",\n        value: function assembleAnchor(anchor) {\n            //if (!anchor.element) {\n            var rect = anchor.getRect();\n            var div = Render.createDiv(anchor.uuid, \"anchor\", {\n                left: rect.x + \"px\",\n                top: rect.y + \"px\",\n                width: rect.w + \"px\",\n                height: rect.h + \"px\"\n            });\n            var svg = Render.createSVG(rect.w, rect.h, {\n                left: \"0px\",\n                top: \"0px\",\n                opacity: 0.8\n            });\n            var shape = Render.createCircle(rect.w / 2, rect.h / 2, rect.w / 2);\n            // switch (anchor.shape) {\n            //     case \"ARROW\":\n            //         shape = Render.createArrow(\n            //             rect[2] / 2.0,\n            //             rect[2] / 2.0,\n            //             rect[2] / 2.0\n            //         );\n            //         break;\n            //     case \"CIRCLE\":\n            //         shape = Render.createCircle(\n            //             rect[2] / 2.0,\n            //             rect[2] / 2.0,\n            //             rect[2] / 2.0\n            //         );\n            //         break;\n\n            //     default:\n            //         shape = Render.createCircle(\n            //             rect[2] / 2.0,\n            //             rect[2] / 2.0,\n            //             rect[2] / 2.0\n            //         );\n            //         break;\n            // }\n\n            _DOMUtil2.default.appendToNode(shape, svg);\n            _DOMUtil2.default.appendToNode(svg, div);\n            return div;\n            //}\n        }\n\n        /**\r\n         *  删除移动锚点\r\n         *\r\n         * @param {Anchor} anchor\r\n         */\n\n    }, {\n        key: \"deleteAnchor\",\n        value: function deleteAnchor(anchor) {\n            var parentWrapper = _DOMUtil2.default.find(\"class\", \"jtk-demo-canvas\");\n            _DOMUtil2.default.delete(anchor.element, parentWrapper);\n            // parentWrapper.removeChild(anchor.element);\n        }\n\n        /**\r\n         * 创建连接线svg\r\n         *\r\n         * @param {Number} width\r\n         * @param {Number} height\r\n         * @param {Object} bound\r\n         * @param {Number} size\r\n         * @param {Number} strokeWidth\r\n         */\n\n    }, {\n        key: \"assembleConnector\",\n        value: function assembleConnector(width, height, bound, size, strokeWidth) {\n            //if (!connector.element) {\n            var left = bound.minX + size / 2 + \"px\";\n            var top = bound.minY + size / 2 + \"px\";\n\n            var wrapper = _DOMUtil2.default.createElement(\"div\", {\n                position: \"absolute\",\n                left: left,\n                top: top,\n                width: width + \"px\",\n                height: height + \"px\",\n                \"pointer-events\": \"none\",\n                overflow: \"visible\"\n            });\n            var svg = Render.createSVG(\"100%\", \"100%\", {\n                left: 0,\n                top: 0,\n                \"pointer-events\": \"none\",\n                overflow: \"visible\",\n                \"z-index\": 10\n            });\n            // const svg = Render.createSVG(width, height, {\n            //     left: `${bound.minX + size / 2}px`,\n            //     top: `${bound.minY + size / 2}px`,\n            //     \"pointer-events\": \"none\",\n            //     overflow: \"visible\",\n            //     \"z-index\": 10\n            // });\n            var path = Render.createPath(strokeWidth);\n            var textWrapper = _DOMUtil2.default.createElement(\"div\", {\n                display: \"none\"\n            }, \"text-linker\");\n\n            //svg.appendChild(path);\n            _DOMUtil2.default.appendToNode(path, svg);\n            _DOMUtil2.default.appendToNode(svg, wrapper);\n            _DOMUtil2.default.appendToNode(textWrapper, wrapper);\n\n            return wrapper;\n            //return svg;\n            //}\n        }\n\n        /**\r\n         * 更新连接线\r\n         *\r\n         * @param {Object} connector\r\n         * @param {Number} width\r\n         * @param {Number} height\r\n         * @param {Object} bound\r\n         * @param {Number} size\r\n         */\n\n    }, {\n        key: \"updateConnector\",\n        value: function updateConnector(connector, width, height, bound, size) {\n            var x = bound.minX + size / 2;\n            var y = bound.minY + size / 2;\n\n            //Render.updateSVG(connector.element, width, height, x, y);\n            _DOMUtil2.default.sizeElement(connector.element, x, y, width, height);\n\n            var pointArr = _Link2.default.calcPathPointArr(width, height, bound, size, connector.getSource(), connector.getTarget());\n            var path = _DOMUtil2.default.find(\"tag\", \"path\", connector.element);\n            Render.updatePath(path, pointArr);\n        }\n\n        /**\r\n         * 删除链接线\r\n         *\r\n         * @param {Object} connector\r\n         */\n\n    }, {\n        key: \"deleteConnector\",\n        value: function deleteConnector(connector) {\n            if (connector.element) {\n                var parentWrapper = _DOMUtil2.default.find(\"class\", \"jtk-demo-canvas\");\n                _DOMUtil2.default.delete(connector.element, parentWrapper);\n                //parentWrapper.removeChild(connector.element);\n            }\n        }\n\n        /**\r\n         * 创建marker\r\n         *\r\n         * @param {Array}  rect\r\n         * @param {String} markerType\r\n         * @param {String} markerId\r\n         */\n\n    }, {\n        key: \"assembleMarker\",\n        value: function assembleMarker(rect, markerType, markerId) {\n            var size = rect.w;\n            var r = size / 2;\n            var x = r;\n            var y = r;\n            var w = size;\n            var h = size;\n\n            var defs = _DOMUtil2.default.createElementNS(_DOMUtil2.default.ns, \"defs\");\n            var marker = _DOMUtil2.default.createElementNS(_DOMUtil2.default.ns, \"marker\", {}, null, {\n                id: markerId,\n                markerUnits: \"userSpaceOnUse\",\n                markerWidth: w,\n                markerHeight: h,\n                viewBox: \"0 0 \" + w + \" \" + h,\n                refX: w,\n                refY: r,\n                orient: \"auto\"\n            });\n\n            var shape = void 0;\n            switch (markerType) {\n                case \"ARROW\":\n                    shape = Render.createArrow(x, y, r);\n                    break;\n                case \"star\":\n                    break;\n\n                default:\n                    shape = Render.createArrow(x, y, r);\n                    break;\n            }\n\n            _DOMUtil2.default.appendToNode(shape, marker);\n            _DOMUtil2.default.appendToNode(marker, defs);\n\n            return defs;\n        }\n    }]);\n\n    return Render;\n}();\n\nexports.default = Render;\n\n//# sourceURL=webpack:///./src/Render.js?");

/***/ }),

/***/ "./src/Source.js":
/*!***********************!*\
  !*** ./src/Source.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Util = __webpack_require__(/*! ./Util */ \"./src/Util.js\");\n\nvar _Util2 = _interopRequireDefault(_Util);\n\nvar _Render = __webpack_require__(/*! ./Render */ \"./src/Render.js\");\n\nvar _Render2 = _interopRequireDefault(_Render);\n\nvar _Observable2 = __webpack_require__(/*! ./Observable */ \"./src/Observable.js\");\n\nvar _Observable3 = _interopRequireDefault(_Observable2);\n\nvar _Drag = __webpack_require__(/*! ./Drag */ \"./src/Drag.js\");\n\nvar _Drag2 = _interopRequireDefault(_Drag);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * 可拖动窗体\r\n */\nvar Source = function (_Observable) {\n    _inherits(Source, _Observable);\n\n    function Source(element) {\n        _classCallCheck(this, Source);\n\n        var _this = _possibleConstructorReturn(this, (Source.__proto__ || Object.getPrototypeOf(Source)).call(this));\n\n        _this.type === \"SOURCE\";\n\n        _this.endPoints = [];\n        _this.element = element;\n        _this.uuid = _this.element.id;\n\n        _this.prev = null;\n        _this.next = null;\n\n        _this.originX = _this.originY = 0;\n        _this.isMouseDown = false;\n        _this.rect = _Util2.default.getElementRectInfo(element);\n\n        _this.on(\"moved\", _this.moved, _this);\n        _this.on(\"moveend\", _this.moveend, _this);\n        return _this;\n    }\n\n    /**\r\n     * 获取位置，大小信息\r\n     */\n\n\n    _createClass(Source, [{\n        key: \"getRect\",\n        value: function getRect() {\n            return this.rect;\n        }\n\n        /**\r\n         * 获取窗体dom元素\r\n         */\n\n    }, {\n        key: \"getElement\",\n        value: function getElement() {\n            return this.element;\n        }\n\n        /**\r\n         * 添加锚点\r\n         *\r\n         * @param {EndPoint} endPoint\r\n         */\n\n    }, {\n        key: \"addEndPoint\",\n        value: function addEndPoint(endPoint) {\n            this.endPoints.push(endPoint);\n        }\n\n        /**\r\n         * 自身移动\r\n         *\r\n         * @param {Object} args\r\n         */\n\n    }, {\n        key: \"moved\",\n        value: function moved(args) {\n            this.endPoints.forEach(function (item) {\n                item.updatePosition(args.$X, args.$Y);\n                _Render2.default.updatePosition(item.element, item.rect.x, item.rect.y);\n            });\n\n            if (plumb.config.useGuideLine && _Drag2.default.dragEl) this.calGuideLine();\n        }\n\n        /**\r\n         * 辅助线相关计算\r\n         */\n\n    }, {\n        key: \"calGuideLine\",\n        value: function calGuideLine() {\n            var me = this;\n\n            var infos = [];\n            var v = {\n                t: {\n                    abs: 9999\n                },\n                tm: {\n                    abs: 9999\n                },\n                b: {\n                    abs: 9999\n                }\n            };\n            var h = {\n                l: {\n                    abs: 9999\n                },\n                lm: {\n                    abs: 9999\n                },\n                r: {\n                    abs: 9999\n                }\n            };\n\n            var merect = me.getRect();\n            var tolerant = plumb.tolerant;\n\n            plumb.sources.forEach(function (sou) {\n                if (sou.uuid !== me.uuid) {\n                    var rect = sou.getRect();\n\n                    var t = rect.y;\n                    var tm = rect.y + rect.h / 2;\n                    var b = rect.y + rect.h;\n                    var met = me.getMinDistance(merect.y, t, tm, b);\n                    var metm = me.getMinDistance(merect.y + merect.h / 2, t, tm, b);\n                    var meb = me.getMinDistance(merect.y + merect.h, t, tm, b);\n\n                    if (met.abs <= tolerant && met.abs < v.t.abs) v.t = met;\n                    if (metm.abs <= tolerant && metm.abs < v.tm.abs) v.tm = metm;\n                    if (meb.abs <= tolerant && meb.abs < v.b.abs) v.b = meb;\n\n                    var l = rect.x;\n                    var lm = rect.x + rect.w / 2;\n                    var r = rect.x + rect.w;\n                    var mel = me.getMinDistance(merect.x, l, lm, r);\n                    var melm = me.getMinDistance(merect.x + merect.w / 2, l, lm, r);\n                    var mer = me.getMinDistance(merect.x + merect.w, l, lm, r);\n\n                    if (mel.abs <= tolerant && mel.abs < h.l.abs) h.l = mel;\n                    if (melm.abs <= tolerant && melm.abs < h.lm.abs) h.lm = melm;\n                    if (mer.abs <= tolerant && mer.abs < h.r.abs) h.r = mer;\n                }\n            });\n\n            //console.log(v, h);\n\n            var minV = _Util2.default.min(v.t.abs, v.tm.abs, v.b.abs);\n            if (minV <= tolerant) {\n                var y = 0;\n                if (minV === v.t.abs) {\n                    y = v.t.p;\n                } else if (minV === v.tm.abs) {\n                    y = v.tm.p;\n                } else {\n                    y = v.b.p;\n                }\n                infos.push({ type: \"horizontal\", x: 0, y: parseInt(y) });\n            }\n\n            var minH = _Util2.default.min(h.l.abs, h.lm.abs, h.r.abs);\n            if (minH <= tolerant) {\n                var x = 0;\n                if (minH === h.l.abs) {\n                    x = h.l.p;\n                } else if (minH === h.lm.abs) {\n                    x = h.lm.p;\n                } else {\n                    x = h.r.p;\n                }\n                infos.push({ type: \"vertical\", x: parseInt(x), y: 0 });\n            }\n\n            plumb.showGuide(infos);\n        }\n\n        /**\r\n         * 计算最小差值\r\n         *\r\n         * @param {Number} v1\r\n         * @param {Number} v2\r\n         * @param {Number} v3\r\n         * @param {Number} v4\r\n         */\n\n    }, {\n        key: \"getMinDistance\",\n        value: function getMinDistance(v1, v2, v3, v4) {\n            var dis1 = v1 - v2;\n            var dis2 = v1 - v3;\n            var dis3 = v1 - v4;\n\n            var posDis1 = Math.abs(dis1);\n            var posDis2 = Math.abs(dis2);\n            var posDis3 = Math.abs(dis3);\n\n            var min = _Util2.default.min(posDis1, posDis2, posDis3);\n\n            if (min === posDis1) {\n                return {\n                    dis: dis1,\n                    abs: posDis1,\n                    p: v2\n                };\n            } else if (min === posDis2) {\n                return {\n                    dis: dis2,\n                    abs: posDis2,\n                    p: v3\n                };\n            } else {\n                return {\n                    dis: dis3,\n                    abs: posDis3,\n                    p: v4\n                };\n            }\n        }\n\n        /**\r\n         * 移动结束\r\n         */\n\n    }, {\n        key: \"moveend\",\n        value: function moveend() {\n            plumb.hideGuide();\n        }\n    }]);\n\n    return Source;\n}(_Observable3.default);\n\nexports.default = Source;\n\n//# sourceURL=webpack:///./src/Source.js?");

/***/ }),

/***/ "./src/Textarea.js":
/*!*************************!*\
  !*** ./src/Textarea.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _DOMUtil = __webpack_require__(/*! ./DOMUtil */ \"./src/DOMUtil.js\");\n\nvar _DOMUtil2 = _interopRequireDefault(_DOMUtil);\n\nvar _Observable2 = __webpack_require__(/*! ./Observable */ \"./src/Observable.js\");\n\nvar _Observable3 = _interopRequireDefault(_Observable2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * 文本域，目前用于连接线\r\n */\nvar Textarea = function (_Observable) {\n    _inherits(Textarea, _Observable);\n\n    function Textarea() {\n        _classCallCheck(this, Textarea);\n\n        var _this = _possibleConstructorReturn(this, (Textarea.__proto__ || Object.getPrototypeOf(Textarea)).call(this));\n\n        _this.element = _this.create();\n        return _this;\n    }\n\n    /**\r\n     * 失去焦点事件，由外部重写\r\n     */\n\n\n    _createClass(Textarea, [{\n        key: \"onblur\",\n        value: function onblur() {}\n\n        /**\r\n         * 创建dom元素\r\n         */\n\n    }, {\n        key: \"create\",\n        value: function create() {\n            var wrapper = _DOMUtil2.default.createElement(\"textarea\", {}, \"text-linker text-linker-textarea\", {\n                wrap: \"off\"\n            });\n            this.bind(wrapper, \"blur\", this.onblur);\n            return wrapper;\n        }\n    }]);\n\n    return Textarea;\n}(_Observable3.default);\n\nexports.default = Textarea;\n\n//# sourceURL=webpack:///./src/Textarea.js?");

/***/ }),

/***/ "./src/Util.js":
/*!*********************!*\
  !*** ./src/Util.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _DOMUtil = __webpack_require__(/*! ./DOMUtil */ \"./src/DOMUtil.js\");\n\nvar _DOMUtil2 = _interopRequireDefault(_DOMUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 工具类，静态方法\r\n */\nvar Util = function () {\n    function Util() {\n        _classCallCheck(this, Util);\n    }\n\n    _createClass(Util, null, [{\n        key: \"min\",\n\n        /**\r\n         * 最小值\r\n         */\n        value: function min() {\n            var args = Array.prototype.slice.call(arguments);\n            if (args.length === 1) return args[0];\n\n            return args.reduce(function (prev, cur) {\n                return prev <= cur ? prev : cur;\n            });\n            // return a < b ? a : b;\n        }\n\n        /**\r\n         * 最大值\r\n         */\n\n    }, {\n        key: \"max\",\n        value: function max() {\n            var args = Array.prototype.slice.call(arguments);\n            if (args.length === 1) return args[0];\n\n            return args.reduce(function (prev, cur) {\n                return prev >= cur ? prev : cur;\n            });\n            //return a > b ? a : b;\n        }\n\n        /**\r\n         * 绝对值\r\n         *\r\n         * @param {Number} a\r\n         * @param {Number} b\r\n         */\n\n    }, {\n        key: \"distance\",\n        value: function distance(a, b) {\n            return Math.abs(a - b);\n        }\n\n        /**\r\n         * 计算两点之间的距离\r\n         *\r\n         * @param {Object} p1\r\n         * @param {Object} p2\r\n         */\n\n    }, {\n        key: \"distanceLine\",\n        value: function distanceLine(p1, p2) {\n            var $x = p1.x - p2.x;\n            var $y = p1.y - p2.y;\n\n            return Math.sqrt($x * $x + $y * $y);\n        }\n\n        /**\r\n         * 获取圆的外接矩形\r\n         *\r\n         * @param {Object} center\r\n         * @param {Number} r\r\n         */\n\n    }, {\n        key: \"getBoundByCircle\",\n        value: function getBoundByCircle(center, r) {\n            return {\n                minX: center.left - r,\n                minY: center.top - r,\n                maxX: center.left + r,\n                maxY: center.top + r\n            };\n        }\n\n        /**\r\n         * 获取两个矩形之间的bound区域\r\n         *\r\n         * @param {Object} rect1\r\n         * @param {Object} rect2\r\n         */\n\n    }, {\n        key: \"getBoundByRect\",\n        value: function getBoundByRect(rect1, rect2) {\n            return {\n                minX: Util.min(rect1.x, rect2.x),\n                minY: Util.min(rect1.y, rect2.y),\n                maxX: Util.max(rect1.x, rect2.x),\n                maxY: Util.max(rect1.y, rect2.y)\n            };\n        }\n\n        /**\r\n         * 两个矩形是否相较\r\n         *\r\n         * @param {Object} rect1\r\n         * @param {Object} rect2\r\n         */\n\n    }, {\n        key: \"isBoundIntersect\",\n        value: function isBoundIntersect(rect1, rect2) {\n            var minx = Util.min(rect1.minX, rect2.minX);\n            var miny = Util.min(rect1.minY, rect2.minY);\n            var maxx = Util.max(rect1.maxX, rect2.maxY);\n            var maxy = Util.max(rect1.maxY, rect2.maxY);\n            //如果兩個矩形相交，那麼計算得到的點對坐標必然滿足\n            return !(minx > maxx || miny > maxy);\n        }\n\n        /**\r\n         * 两个圆是否相较\r\n         *\r\n         * @param {Object} c1\r\n         * @param {Object} c2\r\n         */\n\n    }, {\n        key: \"isCircleIntersect\",\n        value: function isCircleIntersect(c1, c2) {\n            var centerDistance = Math.sqrt(Math.pow(c1.x - c2.x, 2) + Math.pow(c1.y - c2.y, 2));\n\n            return centerDistance <= c1.r * 2;\n        }\n\n        /**\r\n         * 点是否在矩形中\r\n         *\r\n         * @param {Object} p\r\n         * @param {Object} rect\r\n         */\n\n    }, {\n        key: \"isInRect\",\n        value: function isInRect(p, rect) {\n            return p.x > rect.x && p.x < rect.x + rect.w && p.y > rect.y && p.y < rect.y + rect.h;\n        }\n\n        /**\r\n         * 点是否在圆中\r\n         *\r\n         * @param {Object} p\r\n         * @param {Object} rect\r\n         */\n\n    }, {\n        key: \"isInCircle\",\n        value: function isInCircle(p, rect) {\n            var dis = Util.distanceLine(p, { x: rect.x, y: rect.y });\n\n            return dis <= rect.w;\n        }\n\n        /**\r\n         * 设置dom元素属性\r\n         *\r\n         * @param {HTMLElement} target\r\n         * @param {Object}      attributes\r\n         */\n\n    }, {\n        key: \"setAttribute\",\n        value: function setAttribute(target, attributes) {\n            try {\n                for (var key in attributes) {\n                    target.setAttribute(key, attributes[key]);\n                }\n            } catch (evt) {\n                debugger;\n            }\n        }\n\n        /**\r\n         * 设置dom元素样式\r\n         *\r\n         * @param {HTMLElement} target\r\n         * @param {Object}      styles\r\n         */\n\n    }, {\n        key: \"setStyle\",\n        value: function setStyle(target, styles) {\n            for (var key in styles) {\n                target.style[key] = styles[key];\n            }\n        }\n\n        /**\r\n         * 获取元素位置，大小信息\r\n         *\r\n         * @param {HTMLElement} element\r\n         */\n\n    }, {\n        key: \"getElementRectInfo\",\n        value: function getElementRectInfo(element) {\n            var info = [\"offsetLeft\", \"offsetTop\", \"offsetWidth\", \"offsetHeight\"].map(function (attrName) {\n                return element[attrName] || 0;\n            });\n\n            return {\n                x: info[0],\n                y: info[1],\n                w: info[2],\n                h: info[3]\n            };\n        }\n\n        /**\r\n         * 获取线样式\r\n         *\r\n         * @param {String} type\r\n         * @param {Number} w\r\n         */\n\n    }, {\n        key: \"getDashStyle\",\n        value: function getDashStyle(type, w) {\n            switch (type) {\n                case \"SOLID\":\n                    return [];\n                case \"DOT\":\n                    return [1, 4 * w];\n                case \"DASH\":\n                    return [4 * w, 4 * w];\n                case \"DASHDOT\":\n                    return [4 * w, 4 * w, 1, 4 * w];\n                case \"LONGDASH\":\n                    return [8 * w, 4 * w];\n                case \"LONGDASHDOT\":\n                    return [8 * w, 4 * w, 1, 4 * w];\n                default:\n                    return [];\n            }\n        }\n\n        /**\r\n         * 根据连接线类型获取SVG指令\r\n         *\r\n         * @param {String} type\r\n         */\n\n    }, {\n        key: \"getPathCMD\",\n        value: function getPathCMD(type) {\n            if (type === \"BEZIER\") {\n                return \"C\";\n            }\n\n            return \"L\";\n        }\n\n        /**\r\n         * 生成唯一标识\r\n         */\n\n    }, {\n        key: \"guid\",\n        value: function guid() {\n            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n                var r = Math.random() * 16 | 0,\n                    v = c == \"x\" ? r : r & 0x3 | 0x8;\n                return v.toString(16);\n            });\n        }\n\n        /**\r\n         * 在数组中找到指定id的目标\r\n         *\r\n         * @param {Array}  arr\r\n         * @param {String} id\r\n         */\n\n    }, {\n        key: \"findItemByUUID\",\n        value: function findItemByUUID(arr, id) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = arr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var elem = _step.value;\n\n                    if (elem.uuid === id) {\n                        return elem;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            return null;\n        }\n\n        /**\r\n         * 根据锚点找到对应的source\r\n         *\r\n         * @param {Array}  sous\r\n         * @param {Object} achor\r\n         */\n\n    }, {\n        key: \"findSourceByAchor\",\n        value: function findSourceByAchor(sous, achor) {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = sous[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var sou = _step2.value;\n                    var _iteratorNormalCompletion3 = true;\n                    var _didIteratorError3 = false;\n                    var _iteratorError3 = undefined;\n\n                    try {\n                        for (var _iterator3 = sou.endPoints[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                            var ach = _step3.value;\n\n                            if (ach.uuid === achor.uuid) {\n                                return sou;\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError3 = true;\n                        _iteratorError3 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                                _iterator3.return();\n                            }\n                        } finally {\n                            if (_didIteratorError3) {\n                                throw _iteratorError3;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            return null;\n        }\n    }]);\n\n    return Util;\n}();\n\nexports.default = Util;\n\n//# sourceURL=webpack:///./src/Util.js?");

/***/ })

/******/ });